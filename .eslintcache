[{"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\index.js":"1","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\App.js":"2","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\styles\\GlobalStyle.js":"3","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Nav.js":"4","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\GlobalContext.js":"5","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\SubNav.js":"6","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Dashboard.jsx":"7","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\Reducer.js":"8","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\DateFilter.jsx":"9","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Tracker.jsx":"10","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ConfigureDash.jsx":"11","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Expenditure.jsx":"12","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\BudgetList.jsx":"13","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\AddBudgetForm.jsx":"14","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByItemWidget.jsx":"15","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByCategoryWidget.jsx":"16","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\SalaryWidget.jsx":"17","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureWidget.jsx":"18","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\data.js":"19","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AllocatedWidget.jsx":"20","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetList.jsx":"21","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddTransactionForm.jsx":"22","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\Budget.jsx":"23","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Spinner.jsx":"24","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TransactionList.jsx":"25","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedSelector.jsx":"26","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\Table.jsx":"27","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedChart.jsx":"28","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetItem.jsx":"29","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Transaction.jsx":"30","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureChart.jsx":"31","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureFigures.jsx":"32","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\MandatoryTransactionList.jsx":"33","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AnnualOverviewWidget.jsx":"34","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\IncomeWidget.jsx":"35","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\IncomeForm.jsx":"36","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Logout.js":"37","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\appSettings\\ApplicationSettings.jsx":"38","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetList.jsx":"39","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetItem.jsx":"40","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\seedData.js":"41","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TableExpandingHeader.jsx":"42","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Settings.jsx":"43","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Sidebar.js":"44","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budget.jsx":"45","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryForm.jsx":"46","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\AllocatedBudget.jsx":"47","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\UncategorizedBudget.jsx":"48","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\ItemTotal.jsx":"49","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\CategorizedBudget.jsx":"50","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Progressbar.jsx":"51","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryItemForm.jsx":"52","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\ExpeditureByIncomeWidget.jsx":"53","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budgets.jsx":"54","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Income.jsx":"55","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Summary.jsx":"56","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\utilities.js":"57","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureByCategoryWidget.jsx":"58"},{"size":265,"mtime":1610801873949,"results":"59","hashOfConfig":"60"},{"size":1277,"mtime":1662467493620,"results":"61","hashOfConfig":"60"},{"size":3696,"mtime":1662467494647,"results":"62","hashOfConfig":"60"},{"size":6022,"mtime":1662467493663,"results":"63","hashOfConfig":"60"},{"size":4003,"mtime":1662467494569,"results":"64","hashOfConfig":"60"},{"size":4874,"mtime":1662467493709,"results":"65","hashOfConfig":"60"},{"size":5213,"mtime":1662467494524,"results":"66","hashOfConfig":"60"},{"size":2409,"mtime":1662467494591,"results":"67","hashOfConfig":"60"},{"size":5286,"mtime":1662467494344,"results":"68","hashOfConfig":"60"},{"size":819,"mtime":1662467494430,"results":"69","hashOfConfig":"60"},{"size":7774,"mtime":1662467493802,"results":"70","hashOfConfig":"60"},{"size":1039,"mtime":1662467494355,"results":"71","hashOfConfig":"60"},{"size":1726,"mtime":1662467493761,"results":"72","hashOfConfig":"60"},{"size":5172,"mtime":1662477313282,"results":"73","hashOfConfig":"60"},{"size":8746,"mtime":1662467493892,"results":"74","hashOfConfig":"60"},{"size":7792,"mtime":1662471422076,"results":"75","hashOfConfig":"60"},{"size":4628,"mtime":1662467493920,"results":"76","hashOfConfig":"60"},{"size":5552,"mtime":1662467493906,"results":"77","hashOfConfig":"60"},{"size":11401,"mtime":1662467494609,"results":"78","hashOfConfig":"60"},{"size":3131,"mtime":1662470241184,"results":"79","hashOfConfig":"60"},{"size":1868,"mtime":1662467494327,"results":"80","hashOfConfig":"60"},{"size":6171,"mtime":1662467493959,"results":"81","hashOfConfig":"60"},{"size":2828,"mtime":1662467493748,"results":"82","hashOfConfig":"60"},{"size":544,"mtime":1662467493696,"results":"83","hashOfConfig":"60"},{"size":2389,"mtime":1662467494475,"results":"84","hashOfConfig":"60"},{"size":2652,"mtime":1662467493788,"results":"85","hashOfConfig":"60"},{"size":2175,"mtime":1662467493833,"results":"86","hashOfConfig":"60"},{"size":1238,"mtime":1662467493775,"results":"87","hashOfConfig":"60"},{"size":2416,"mtime":1662467494320,"results":"88","hashOfConfig":"60"},{"size":1442,"mtime":1662467494464,"results":"89","hashOfConfig":"60"},{"size":1816,"mtime":1662467493809,"results":"90","hashOfConfig":"60"},{"size":7321,"mtime":1662467493820,"results":"91","hashOfConfig":"60"},{"size":5489,"mtime":1662467494381,"results":"92","hashOfConfig":"60"},{"size":5461,"mtime":1662467493863,"results":"93","hashOfConfig":"60"},{"size":6727,"mtime":1662467493913,"results":"94","hashOfConfig":"60"},{"size":12113,"mtime":1662467494364,"results":"95","hashOfConfig":"60"},{"size":1136,"mtime":1662467493655,"results":"96","hashOfConfig":"60"},{"size":3665,"mtime":1662467493727,"results":"97","hashOfConfig":"60"},{"size":1360,"mtime":1662467494452,"results":"98","hashOfConfig":"60"},{"size":2027,"mtime":1662467494442,"results":"99","hashOfConfig":"60"},{"size":10468,"mtime":1662467494628,"results":"100","hashOfConfig":"60"},{"size":20213,"mtime":1662467494406,"results":"101","hashOfConfig":"60"},{"size":1406,"mtime":1662467494550,"results":"102","hashOfConfig":"60"},{"size":4179,"mtime":1662467493690,"results":"103","hashOfConfig":"60"},{"size":2388,"mtime":1662467494488,"results":"104","hashOfConfig":"60"},{"size":6338,"mtime":1662467493932,"results":"105","hashOfConfig":"60"},{"size":1273,"mtime":1662467493712,"results":"106","hashOfConfig":"60"},{"size":1379,"mtime":1662467493710,"results":"107","hashOfConfig":"60"},{"size":1290,"mtime":1662467493635,"results":"108","hashOfConfig":"60"},{"size":6127,"mtime":1662467493622,"results":"109","hashOfConfig":"60"},{"size":1314,"mtime":1662467493673,"results":"110","hashOfConfig":"60"},{"size":6359,"mtime":1662467493944,"results":"111","hashOfConfig":"60"},{"size":1318,"mtime":1662467493632,"results":"112","hashOfConfig":"60"},{"size":1846,"mtime":1662467494505,"results":"113","hashOfConfig":"60"},{"size":853,"mtime":1662467494532,"results":"114","hashOfConfig":"60"},{"size":5225,"mtime":1662471047730,"results":"115","hashOfConfig":"60"},{"size":11253,"mtime":1662468347743,"results":"116","hashOfConfig":"60"},{"size":8497,"mtime":1662474189555,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1x8ekdg",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"120"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\index.js",[],["244","245"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\App.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\styles\\GlobalStyle.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Nav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\GlobalContext.js",["246"],"import { createContext, useReducer } from \"react\";\r\nimport { reducer } from \"./Reducer\";\r\n//import { getWidgets } from \"../data\";\r\nimport moment from \"moment\";\r\n\r\n//TODO: this could be an application setting\r\n// Set Monday as first day of the week.\r\nmoment.updateLocale(\"en\", {\r\n  week: {\r\n    dow: 1,\r\n  },\r\n});\r\n\r\n//intialState\r\nconst initialState = {\r\n  budgets: [],\r\n  currentBudget: {\r\n    data: {\r\n      income: {\r\n        annualGross: 0,\r\n        taxFreeAllowance: 0,\r\n        taxable: 0,\r\n        incomeTax: 0,\r\n        nationalInsurance: 0,\r\n        totalDeductions: 0,\r\n        annualNet: 0,\r\n        monthlyNet: 0,\r\n        weeklyNet: 0,\r\n      },\r\n      budgetCategories: \r\n        [\r\n          {\r\n            name: \"uncategorised\",\r\n            total: 0,\r\n          }\r\n        ]\r\n    },\r\n  },\r\n  \r\n  currentBudgetId: \"\",\r\n  currentBudget: {},\r\n  isBudgetLoaded: false,\r\n  includeMandatory: false,\r\n  includeDisposableOnly: false,\r\n  currencySymbol: \"£\",\r\n  dateRange: {\r\n    from: moment().startOf(\"month\"),\r\n    to: moment().endOf(\"month\"),\r\n  },\r\n  allocatedFundsTotal: 0,\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //BUDGET Actions\r\n  const updateAllocatedFunds = (allocated) => {\r\n    dispatch({\r\n      type: \"UPDATE_ALLOCATED\",\r\n      payload: allocated,\r\n    });\r\n  };\r\n  const loadBudgets = (budgets) => {\r\n    dispatch({\r\n      type: \"LOAD_BUDGETS\",\r\n      payload: budgets,\r\n    });\r\n  };\r\n  const deleteBudget = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_BUDGET\",\r\n      payload: id,\r\n    });\r\n  };\r\n  const addBudget = (budget) => {\r\n    dispatch({\r\n      type: \"ADD_BUDGET\",\r\n      payload: budget,\r\n    });\r\n  };\r\n  const updateBudget = (budget) => {\r\n    dispatch({\r\n      type: \"UPDATE_BUDGET\",\r\n      payload: budget,\r\n    });\r\n  };\r\n\r\n  //BUDGET ITEM ACTIONS\r\n  const addBudgetItem = (budget) => {\r\n    dispatch({\r\n      type: \"ADD_BUDGET_ITEM\",\r\n      payload: budget,\r\n    });\r\n  };\r\n  const deleteBudgetItem = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_BUDGET_ITEM\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const updateCurrentBudgetId = (id) => {\r\n    dispatch({\r\n      type: \"UPDATE_CURRENT_BUDGET_ID\",\r\n      payload: id,\r\n    });\r\n  };\r\n  const updateCurrentBudget = (budget) => {\r\n    dispatch({\r\n      type: \"UPDATE_CURRENT_BUDGET\",\r\n      payload: budget,\r\n    });\r\n  };\r\n\r\n  const updateBudgetLoaded = (loaded) => {\r\n    dispatch({\r\n      type: \"UPDATE_ISLOADED\",\r\n      payload: loaded,\r\n    });\r\n  };\r\n  const updateIncludeMandatory = (include) => {\r\n    dispatch({\r\n      type: \"UPDATE_INCLUDE_MANDATORY\",\r\n      payload: include,\r\n    });\r\n  };\r\n  const updateIncludeDisposableOnly = (include) => {\r\n    dispatch({\r\n      type: \"UPDATE_DISPOSABLE\",\r\n      payload: include,\r\n    });\r\n  };\r\n\r\n  const updateDateRange = (range) => {\r\n    dispatch({\r\n      type: \"UPDATE_RANGE\",\r\n      payload: range,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        income: state.income,\r\n        budgets: state.budgets,\r\n        currentBudgetId: state.currentBudgetId,\r\n        currentBudget: state.currentBudget,\r\n        isBudgetLoaded: state.isBudgetLoaded,\r\n        includeMandatory: state.includeMandatory,\r\n        includeDisposableOnly: state.includeDisposableOnly,\r\n        currencySymbol: state.currencySymbol,\r\n        dateRange: state.dateRange,\r\n        allocatedFundsTotal: state.allocatedFundsTotal,\r\n        updateAllocatedFunds,\r\n        loadBudgets,\r\n        addBudget,\r\n        deleteBudget,\r\n        updateBudget,\r\n        deleteBudgetItem,\r\n        addBudgetItem,\r\n        updateCurrentBudgetId,\r\n        updateCurrentBudget,\r\n        updateBudgetLoaded,\r\n        updateDateRange,\r\n        updateIncludeMandatory,\r\n        updateIncludeDisposableOnly,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\SubNav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Dashboard.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\Reducer.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\DateFilter.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Tracker.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ConfigureDash.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Expenditure.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\BudgetList.jsx",["247"],"import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion, frame } from \"framer-motion\";\r\nimport Budget from \"./Budget\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n\r\nconst BudgetList = () => {\r\n  const { budgets } = useContext(GlobalContext);\r\n\r\n  const budgetListAnim = {\r\n    start: { opacity: 0 },\r\n    end: {\r\n      opacity: 1,\r\n      transition: { when: \"beforeChildren\", duration: 1, staggerChildren: 1 },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transition: {\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  const budgetAnim = {\r\n    start: { opacity: 0, y: -50 },\r\n    end: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { duration: 2, ease: \"easeOut\" },\r\n    },\r\n  };\r\n\r\n  const arrBudgets = budgets.map((budget) => (\r\n    <Budget budget={budget} key={budget.id} variants={budgetAnim} />\r\n  ));\r\n\r\n  // const items = array.map((item) => {\r\n  //   return (\r\n  //     <Frame\r\n  //       custom={item}\r\n  //       key={item}\r\n  //       y={-500}\r\n  //       opacity={0}\r\n  //       animate={\"popUp\"}\r\n  //       variants={variants}\r\n  //     >\r\n  //       {item}\r\n  //     </Frame>\r\n  //   );\r\n  // });\r\n  // return <Frame style={containerStyle}>{items}</Frame>;\r\n\r\n  return (\r\n    <StyledBudgetList\r\n      variants={budgetListAnim}\r\n      initial=\"start\"\r\n      animate=\"end\"\r\n      exit=\"exit\"\r\n    >\r\n      {\r\n        /* {budgets.map((budget) => (\r\n        <Budget budget={budget} key={budget.id} variants={budgetAnim} />\r\n      ))} */\r\n        arrBudgets\r\n      }\r\n    </StyledBudgetList>\r\n  );\r\n};\r\n\r\nconst StyledBudgetList = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport default BudgetList;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\AddBudgetForm.jsx",["248","249"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByItemWidget.jsx",["250"],"import { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../context/GlobalContext\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { formatNumber } from \"../../../util\";\r\nimport AllocatedSelector from \"../AllocatedSelector\";\r\nimport { getNetIncomeForPeriod, getAllocatedPerPeriod } from \"../../../util\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n//icons\r\nimport { AiOutlineTable } from \"react-icons/ai\";\r\nimport { GoGraph } from \"react-icons/go\";\r\n//chart\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nconst BudgetByItemWidget = () => {\r\n  const [toggleTable, setToggleTable] = useState(false);\r\n  const [period, setPeriod] = useState(\"daily\");\r\n  const { currencySymbol, currentBudget } = useContext(GlobalContext);\r\n  const budgetItems = currentBudget.data.budgetItems;\r\n  let netIncomeForPeriod = getNetIncomeForPeriod(currentBudget, period);\r\n  let totalAllocatedForPeriod = getAllocatedPerPeriod(currentBudget, period);\r\n\r\n  //let subTotal = getAllocatedPerPeriod(currentBudget, period);\r\n  //let selectedPeriod = getNetIncomeForPeriod(currentBudget, period);\r\n  const remaining = (netIncomeForPeriod - totalAllocatedForPeriod).toFixed(2);\r\n\r\n  const handlePeriodChange = (v) => {\r\n    setPeriod(v);\r\n  };\r\n\r\n  //toggle beteen chart and table\r\n  const handleChangeView = () => {\r\n    setToggleTable(!toggleTable);\r\n  };\r\n\r\n  const getItemAmountPerYear = (amount, frequency) => {\r\n    switch (frequency) {\r\n      case \"daily\":\r\n        return amount * 365;\r\n      case \"weekly\":\r\n        return amount * 52;\r\n      case \"monthly\":\r\n        return amount * 12;\r\n      case \"annually\":\r\n        return amount;\r\n      default:\r\n        return amount;\r\n    }\r\n  };\r\n\r\n  //pass in YEARLY AMOUNT\r\n  //selected period comes from period hook\r\n  const getItemAmountPerPeriod = (yearlyAmount) => {\r\n    switch (period) {\r\n      case \"daily\":\r\n        return yearlyAmount / 365;\r\n      case \"weekly\":\r\n        return yearlyAmount / 52;\r\n      case \"monthly\":\r\n        return yearlyAmount / 12;\r\n      case \"annually\":\r\n        return yearlyAmount;\r\n      default:\r\n        return yearlyAmount;\r\n    }\r\n  };\r\n\r\n  //TABLE DATA\r\n  const rows = budgetItems.map((item) => {\r\n    return [\r\n      item.category,\r\n      item.item,\r\n      getItemAmountPerPeriod(getItemAmountPerYear(item.amount, item.frequency)),\r\n      (100 / totalAllocatedForPeriod) *\r\n        getItemAmountPerPeriod(\r\n          getItemAmountPerYear(item.amount, item.frequency)\r\n        ),\r\n      (100 / netIncomeForPeriod) *\r\n        getItemAmountPerPeriod(\r\n          getItemAmountPerYear(item.amount, item.frequency)\r\n        ),\r\n    ];\r\n  });\r\n\r\n  //CHART DATA\r\n  const d = rows.map((item) => {\r\n    return item[4].toFixed(2);\r\n  });\r\n  const l = budgetItems.map((item) => item.item);\r\n\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: `Budget breakdown by category (${currencySymbol})`,\r\n      position: \"bottom\",\r\n      fontSize: 16,\r\n      fontStyle: \"bold\",\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: l,\r\n    datasets: [\r\n      {\r\n        borderColor: [\"#00b4ee\", \"#00b4ee\"],\r\n        label: \"Allocated / Remaining\",\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 0.5,\r\n        pointHoverRadius: 1,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 1,\r\n        pointRadius: 1,\r\n        pointHitRadius: 1,\r\n        backgroundColor: [\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n        ],\r\n        hoverBackgroundColor: [\"#628bb4\"],\r\n        data: d,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <StyledBreakdown>\r\n      <div className=\"heading\">\r\n        <h4>Budget breakdown by item</h4>\r\n        {currentBudget.data.income.yearlyNet > 0 &&\r\n          currentBudget.data.budgetItems.length > 0 && (\r\n            <div className=\"iconSelect\">\r\n              {toggleTable ? (\r\n                <AiOutlineTable\r\n                  className=\"icon\"\r\n                  onClick={() => handleChangeView()}\r\n                />\r\n              ) : (\r\n                <GoGraph className=\"icon\" onClick={() => handleChangeView()} />\r\n              )}\r\n            </div>\r\n          )}\r\n      </div>\r\n      //TODO: Chart not displaying data correctly\r\n      {currentBudget.data.income.yearlyNet > 0 &&\r\n      currentBudget.data.budgetItems.length > 0 ? (\r\n        <div className=\"data\">\r\n          {toggleTable ? (\r\n            <div className=\"chart\">\r\n              <Pie data={data} options={options} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"info\">\r\n              <AllocatedSelector\r\n                period={period}\r\n                handlePeriodChange={handlePeriodChange}\r\n                subTotal={totalAllocatedForPeriod}\r\n                remaining={remaining}\r\n                selectedPeriod={netIncomeForPeriod}\r\n              />\r\n              <div className=\"table\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>\r\n                        <h5>Category</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>Item</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>Item sub-total</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>% of allocated</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>% of total</h5>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows\r\n                      .sort((a, b) => (a[2] < b[2] ? 1 : -1))\r\n                      .map((budgetItem, i) => (\r\n                        <tr key={uuidv4()}>\r\n                          <td>\r\n                            <p className=\"tableItem\">{budgetItem[0]}</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">{budgetItem[1]}</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">\r\n                              <span className=\"symbol\">{currencySymbol} </span>\r\n                              {formatNumber(budgetItem[2])}\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">\r\n                              {formatNumber(budgetItem[3])} %\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">\r\n                              {formatNumber(budgetItem[4])} %\r\n                            </p>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <p>No data to display.</p>\r\n          <p>Please enter income figures and budget.</p>\r\n        </>\r\n      )}\r\n    </StyledBreakdown>\r\n  );\r\n};\r\n\r\nconst StyledBreakdown = styled(motion.div)`\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n  width: 100%;\r\n  .info,\r\n  .chart {\r\n    width: 100%;\r\n  }\r\n  .heading {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .icon {\r\n      width: 25px;\r\n      height: 25px;\r\n      color: white;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .data {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    .drop {\r\n      margin-bottom: 0.25rem;\r\n      label {\r\n        margin-right: 0.25rem;\r\n      }\r\n    }\r\n    .figures {\r\n      display: flex;\r\n      gap: 1rem;\r\n    }\r\n  }\r\n  table {\r\n    width: 100%;\r\n    .tableItem {\r\n      text-transform: capitalize;\r\n    }\r\n    th {\r\n      text-align: center;\r\n    }\r\n    td {\r\n      text-align: center;\r\n      //min-width: 30%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BudgetByItemWidget;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByCategoryWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\SalaryWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\data.js",["251"],"export const getWidgets = () => {\r\n  return {\r\n    incomeWidgets: [\r\n      {\r\n        name: \"Salary gross and net breakdown\",\r\n        selected: false,\r\n      },\r\n    ],\r\n    budgetWidgets: [\r\n      {\r\n        name: \"Budget allocated / remaining\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Budget breakdown by category\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Budget breakdown by item\",\r\n        selected: false,\r\n      },\r\n    ],\r\n    expenditureWidgets: [\r\n      {\r\n        name: \"Salary v Budget v Expenditure\",\r\n        selected: false,\r\n      },\r\n    ],\r\n    trackerWidgets: [\r\n      {\r\n        name: \"Tracker\",\r\n        selected: false,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const getData = () => {\r\n  const seedData = [\r\n    {\r\n      id: \"1\",\r\n      saveName: \"Julie\",\r\n      saveDate: \"02/10/2020\",\r\n      description: \"Julie salary budget\",\r\n      widgets: getWidgets(),\r\n      data: {\r\n        transactions: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 1.0,\r\n          },\r\n        ],\r\n        budgetItems: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            frequency: \"weekly\",\r\n            amount: 288.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            frequency: \"monthly\",\r\n            amount: 51.57,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            frequency: \"monthly\",\r\n            amount: 11.39,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 4,\r\n            category: \"car\",\r\n            item: \"tax\",\r\n            frequency: \"annually\",\r\n            amount: 150.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 5,\r\n            category: \"car\",\r\n            item: \"insurance\",\r\n            frequency: \"annually\",\r\n            amount: 353.17,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 28,\r\n            category: \"bills\",\r\n            frequency: \"monthly\",\r\n            id: \"fdf487aa-040a-4c91-9d34-e221e0ae5ffc\",\r\n            item: \"school union naht\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 22.67,\r\n            category: \"car\",\r\n            frequency: \"monthly\",\r\n            id: \"921c8c21-515c-4cb3-bf7c-c740df5d02d8\",\r\n            item: \"servicing\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 100,\r\n            category: \"car\",\r\n            frequency: \"monthly\",\r\n            id: \"df78edab-e316-49ea-ae8c-9f20aca86132\",\r\n            item: \"petrol\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 60,\r\n            category: \"clothing\",\r\n            frequency: \"monthly\",\r\n            id: \"d88713f0-5f12-4381-bae4-e1c235b8af68\",\r\n            item: \"clothes shoes\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 150,\r\n            category: \"entertainment\",\r\n            frequency: \"weekly\",\r\n            id: \"49b5acbe-1921-4219-8ee6-8c153ed08472\",\r\n            item: \"eating out\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 57,\r\n            category: \"excercise\",\r\n            frequency: \"monthly\",\r\n            id: \"ad402800-0ca9-417d-9b24-9fd6e645a3fb\",\r\n            item: \"gym\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 235.06,\r\n            category: \"financial\",\r\n            frequency: \"monthly\",\r\n            id: \"1c39a1e6-eb1d-4722-a6e8-1936e279e45d\",\r\n            item: \"car loan\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 400,\r\n            category: \"financial\",\r\n            frequency: \"monthly\",\r\n            id: \"13a75aed-5b72-47ff-86b4-637d6a51257b\",\r\n            item: \"savings\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 80,\r\n            category: \"health\",\r\n            frequency: \"annually\",\r\n            id: \"f6491402-4ccd-4af0-a572-50f469cfea5d\",\r\n            item: \"prescriptions\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n        ],\r\n        income: {\r\n          annual: 63000.0,\r\n          allowance: 12509.0,\r\n          taxable: 50491.0,\r\n          tax: 12698.2,\r\n          ni: 5120.0,\r\n          contributions: 21802.08,\r\n          yearlyNet: 41197.92,\r\n          monthlyNet: 3433.16,\r\n          weeklyNet: 792.27,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"2\",\r\n      saveName: \"Neil\",\r\n      saveDate: \"02/10/2020\",\r\n      description: \"Neil salary budget\",\r\n      widgets: getWidgets(),\r\n      data: {\r\n        transactions: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            date: \"07-02-2021\",\r\n            amount: 1.0,\r\n          },\r\n        ],\r\n        budgetItems: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            frequency: \"weekly\",\r\n            amount: 10.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            frequency: \"monthly\",\r\n            amount: 10.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            frequency: \"monthly\",\r\n            amount: 0.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 4,\r\n            category: \"car\",\r\n            item: \"tax\",\r\n            frequency: \"annually\",\r\n            amount: 40.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 5,\r\n            category: \"car\",\r\n            item: \"insurance\",\r\n            frequency: \"annually\",\r\n            amount: 0.17,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n        ],\r\n        income: {\r\n          annual: 15000.0,\r\n          allowance: 0.0,\r\n          taxable: 0.0,\r\n          tax: 0.2,\r\n          ni: 0.0,\r\n          contributions: 0.0,\r\n          yearlyNet: 15000.0,\r\n          monthlyNet: 1250.0,\r\n          weeklyNet: 288.46,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"3\",\r\n      saveName: \"Basic\",\r\n      saveDate: \"02/10/2020\",\r\n      description: \"Basic test figures\",\r\n      widgets: getWidgets(),\r\n      data: {\r\n        transactions: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 1.0,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 2.0,\r\n            paid: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 3.0,\r\n            paid: false,\r\n          },\r\n        ],\r\n        budgetItems: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            frequency: \"weekly\",\r\n            amount: 1.0,\r\n            paid: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            frequency: \"monthly\",\r\n            amount: 2.0,\r\n            paid: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            frequency: \"monthly\",\r\n            amount: 3.0,\r\n            paid: false,\r\n          },\r\n        ],\r\n        income: {\r\n          annual: 100.0,\r\n          allowance: 80.0,\r\n          taxable: 20.0,\r\n          tax: 5.0,\r\n          ni: 5.0,\r\n          contributions: 10.0,\r\n          yearlyNet: 90.0,\r\n          monthlyNet: 7.5,\r\n          weeklyNet: 1.73,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  //window.localStorage.setItem(\"EXPENSE-APP\", JSON.stringify(seedData));\r\n  const data = JSON.parse(window.localStorage.getItem(\"EXPENSE-APP\"));\r\n\r\n  //console.log({ data });\r\n  return new Promise((resolve, reject) => {\r\n    if (data !== undefined && data !== null) {\r\n      setTimeout(() => {\r\n        resolve(data);\r\n      }, 1000);\r\n    } else {\r\n      reject(\"Nope\");\r\n    }\r\n  });\r\n};\r\n\r\n// function imgLoad(url) {\r\n//   // Create new promise with the Promise() constructor;\r\n//   // This has as its argument a function\r\n//   // with two parameters, resolve and reject\r\n//   return new Promise(function (resolve, reject) {\r\n//     // Standard XHR to load an image\r\n//     var request = new XMLHttpRequest();\r\n//     request.open(\"GET\", url);\r\n//     request.responseType = \"blob\";\r\n//     // When the request loads, check whether it was successful\r\n//     request.onload = function () {\r\n//       if (request.status === 200) {\r\n//         // If successful, resolve the promise by passing back the request response\r\n//         resolve(request.response);\r\n//       } else {\r\n//         // If it fails, reject the promise with a error message\r\n//         reject(\r\n//           Error(\r\n//             \"Image didn't load successfully; error code:\" + request.statusText\r\n//           )\r\n//         );\r\n//       }\r\n//     };\r\n//     request.onerror = function () {\r\n//       // Also deal with the case when the entire request fails to begin with\r\n//       // This is probably a network error, so reject the promise with an appropriate message\r\n//       reject(Error(\"There was a network error.\"));\r\n//     };\r\n//     // Send the request\r\n//     request.send();\r\n//   });\r\n// }\r\n// // Get a reference to the body element, and create a new image object\r\n// var body = document.querySelector(\"body\");\r\n// var myImage = new Image();\r\n// // Call the function with the URL we want to load, but then chain the\r\n// // promise then() method on to the end of it. This contains two callbacks\r\n// imgLoad(\"myLittleVader.jpg\").then(\r\n//   function (response) {\r\n//     // The first runs when the promise resolves, with the request.response\r\n//     // specified within the resolve() method.\r\n//     var imageURL = window.URL.createObjectURL(response);\r\n//     myImage.src = imageURL;\r\n//     body.appendChild(myImage);\r\n//     // The second runs when the promise\r\n//     // is rejected, and logs the Error specified with the reject() method.\r\n//   },\r\n//   function (Error) {\r\n//     console.log(Error);\r\n//   }\r\n// );\r\n\r\n//#############################################################\r\n// TODO:\r\n// THINGS LEARNED:\r\n// complex: destructuring of arrays, objects and objects arrays\r\n// react-calendar\r\n// moment.js\r\n// function\r\n//\r\n//#############################################################\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AllocatedWidget.jsx",["252","253"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetList.jsx",["254"],"import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport { updateBudgetLocally, sortByCategoryThenByItem } from \"../../utilities\";\r\n//import UncategorizedBudget from \"../../components/UncategorizedBudget\"\r\nimport CategorizedBudget from \"../../components/CategorizedBudget\"\r\n\r\nconst BudgetList = () => {\r\n\r\n  const {\r\n    budgets,\r\n    currentBudget,\r\n    updateBudget,\r\n    updateCurrentBudget,\r\n  } = useContext(GlobalContext);\r\n\r\n  const budgetCategories = currentBudget.data.budgetCategories;\r\n  \r\n  const deleteBudgetCategory = (id) => {\r\n    const newBudget = {\r\n      ...currentBudget,\r\n      data: {\r\n        ...currentBudget.data,\r\n        budgetCategories: budgetCategories.filter((item) => item.id !== id),\r\n       },\r\n    };\r\n\r\n    //update global context\r\n    updateBudget(newBudget);\r\n\r\n    //update local storage\r\n    updateBudgetLocally(budgets, newBudget);\r\n\r\n    //updatecurrentBudget\r\n    updateCurrentBudget(newBudget);\r\n  };\r\n\r\n  //console.log(sortByCategoryThenByItem(budgetCategories));\r\n\r\n  return (\r\n    <StyledBudgetList>\r\n        \r\n      {/* <UncategorizedBudget\r\n        uncategorisedTotal={uncategorisedTotal}\r\n        uncategorisedBudgetTotal={uncategorisedBudgetTotal}\r\n        uncategorisedPercentage={uncategorisedPercentage}\r\n      /> */}\r\n      \r\n      {\r\n        budgetCategories.map((category) => (\r\n          <CategorizedBudget\r\n            key={category.id}\r\n            budgetCategory={category}\r\n            deleteBudgetCategory={deleteBudgetCategory}\r\n          />\r\n        ))\r\n        }\r\n      \r\n    </StyledBudgetList>\r\n  );\r\n};\r\n\r\nconst StyledBudgetList = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 1rem;\r\n  color: #848586;\r\n`;\r\n\r\nexport default BudgetList;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddTransactionForm.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\Budget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Spinner.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TransactionList.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedSelector.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\Table.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedChart.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetItem.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Transaction.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureChart.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureFigures.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\MandatoryTransactionList.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AnnualOverviewWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\IncomeWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\IncomeForm.jsx",["255","256","257","258"],"import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { formatStrings, divideValues, multiplyValues, updateBudgetLocally } from \"../../utilities\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst IncomeForm = () => {\r\n  //global context\r\n  const {\r\n    updateBudget,\r\n    budgets,\r\n    updateCurrentBudget,\r\n    currentBudget,\r\n    currencySymbol,\r\n  } = useContext(GlobalContext);\r\n\r\n  //form data hook\r\n  const [incomeData, setIncomeData] = useState(\r\n    //divide values by 100\r\n    divideValues(currentBudget?.data?.income)\r\n    // {...currentBudget?.data?.income}\r\n  );\r\n\r\n    //let annualGross = currentBudget?.data?.income.annualGross;\r\n    //taxFreeAllowance\r\n    let taxable = Number(incomeData.annualGross - incomeData.taxFreeAllowance).toFixed(2);\r\n    \r\n    //incomeTax\r\n    //nationalInsurance\r\n    let totalDeductions = Number(incomeData.nationalInsurance) + Number(incomeData.incomeTax);\r\n    \r\n    let annualNet = incomeData.annualGross - totalDeductions;\r\n    let monthlyNet = Number(annualNet / 12).toFixed(2);\r\n    let weeklyNet = Number(annualNet / 52).toFixed(2);\r\n    //let dailyNet = Number(annualNet / 365).toFixed(2);\r\n    \r\n  annualNet = Number(annualNet).toFixed(2);\r\n  totalDeductions = Number(totalDeductions).toFixed(2);\r\n\r\n  \r\n  useEffect(() => {\r\n    //Format to string to Numbers\r\n    setIncomeData(()=>(formatStrings(incomeData)))\r\n  },[])\r\n    \r\n  //TOAST MESSAGE\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"UPDATED\":\r\n        toast.dark(\"Income updated\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.dark(\"Please enter numbers only\");\r\n        break;\r\n        case \"INVALID ANNUAL\":\r\n          toast.dark(\r\n            \"Please ensure Annual (Net) figure is lower than Annual (gross)\"\r\n        );\r\n        break;\r\n      case \"INVALID ALLOWANCE\":\r\n        toast.dark(\r\n          \"Please ensure Allowance is less than Annual (gross) figure\"\r\n          );\r\n        break;\r\n      case \"INVALID DEDUCTIONS\":\r\n        toast.dark(\r\n          \"Please ensure Total Deductions are less than Annual (gross) figure\"\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  //VALIDATION\r\n  //FORMAT\r\n  const handleFormatValidation = (value) => {\r\n    const reg = /^[0-9]*(?:\\.?)[0-9]*$/;\r\n    return value.match(reg);\r\n  };\r\n\r\n  //NET less than gross annual income\r\n  const validateAnnual = () => {\r\n    let isValid = false;\r\n    if (incomeData.annual > incomeData.annualNet) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID annualGross\");\r\n      document.getElementById(\"annualNet\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const validateAllowance = () => {\r\n    let isValid = false;\r\n    if (incomeData.taxFreeAllowance < incomeData.annualGross) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID ALLOWANCE\");\r\n      document.getElementById(\"taxFreeAllowance\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const validateDeductions = () => {\r\n    let isValid = false;\r\n    if (incomeData.totalDeductions < incomeData.annualGross) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID DEDUCTIONS\");\r\n      document.getElementById(\"totalDeductions\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  //handle form data change\r\n  const handleChange = (e) => {\r\n    if (handleFormatValidation(e.target.value)) {\r\n      setIncomeData(() => ({\r\n        ...incomeData,\r\n        [e.target.name]: e.target.value,\r\n      }));\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    //check if component mounted\r\n    setIncomeData({\r\n      ...incomeData,\r\n      [e.target.name]: Number(e.target.value).toFixed(2)\r\n    });\r\n  };\r\n\r\n  let updatedBudget = {\r\n    ...currentBudget,\r\n    data: {\r\n      ...currentBudget.data,\r\n      // implicit type conversion to number\r\n      // (by multiplying by 100)\r\n      // and stores number without decimal for increased accuracy later\r\n      income: multiplyValues({\r\n        ...incomeData,\r\n        annualGross: incomeData.annualGross,\r\n        taxFreeAllowance: incomeData.taxFreeAllowance,\r\n        taxable: taxable,\r\n        incomeTax: incomeData.incomeTax,\r\n        nationalInsurance: incomeData.nationalInsurance,\r\n        totalDeductions: incomeData.totalDeductions,\r\n        annualNet: annualNet,\r\n        monthlyNet: monthlyNet,\r\n        weeklyNet: weeklyNet,\r\n      }),\r\n    },\r\n  }\r\n  \r\n  //handle form submit\r\n  const handleSaveBudget = () => {\r\n    if (\r\n      // validateAnnual() === true &&\r\n      // validateAllowance() === true &&\r\n      // validateDeductions() === true\r\n      true\r\n    ) {\r\n      //update global provider\r\n      updateBudget(updatedBudget);\r\n      // update local storage\r\n      updateBudgetLocally(budgets, updatedBudget);\r\n      // update current budget\r\n      updateCurrentBudget(updatedBudget);\r\n      \r\n      //toast message\r\n      notify(\"UPDATED\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledIncomeForm>\r\n      <ToastContainer\r\n        closeButton={false}\r\n        transition={Zoom}\r\n        position=\"bottom-center\"\r\n        draggable={false}\r\n        pauseOnHover\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false} \r\n        pauseOnFocusLoss\r\n      />\r\n      <h4>Income Information</h4>\r\n      <div className=\"container\">\r\n        <form>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"annualGross\">Annual Salary (Gross)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"annualGross\"\r\n                id=\"annualGross\"\r\n                value={incomeData.annualGross}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"taxFreeAllowance\">Tax Free Allowance</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"taxFreeAllowance\"\r\n                id=\"taxFreeAllowance\"\r\n                value={incomeData.taxFreeAllowance}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"taxable\">Taxable Income</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"taxable\"\r\n                id=\"taxable\"\r\n                value={taxable}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"incomeTax\">Income Tax</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"incomeTax\"\r\n                id=\"incomeTax\"\r\n                value={incomeData.incomeTax}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"nationalInsurance\">National Insurance</label>\r\n            <div className=\"currency-iput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"nationalInsurance\"\r\n                id=\"nationalInsurance\"\r\n                value={incomeData.nationalInsurance}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"totalDeductions\">Total deductions</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"totalDeductions\"\r\n                id=\"totalDeductions\"\r\n                value={totalDeductions}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"annualNet\">Annual Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"annualNet\"\r\n                id=\"annualNet\"\r\n                value={annualNet}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"monthlyNet\">Monthly Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"monthlyNet\"\r\n                id=\"monthlyNet\"\r\n                value={monthlyNet}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"weeklyNet\">Weekly Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"weeklyNet\"\r\n                id=\"weeklyNet\"\r\n                value={weeklyNet}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"row\">\r\n            <label htmlFor=\"dailyNet\">Daily Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                type=\"text\"\r\n                name=\"dailyNet\"\r\n                id=\"dailyNet\"\r\n                value={dailyNet}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div> */}\r\n        </form>\r\n\r\n        <button className=\"button\" onClick={() => handleSaveBudget()}>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </StyledIncomeForm>\r\n  );\r\n};\r\n\r\nconst StyledIncomeForm = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .charts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 1rem;\r\n    column-gap: 1rem;\r\n  }\r\n\r\n  .line {\r\n    width: 100%;\r\n    margin: 0.5rem;\r\n    background-color: #848586;\r\n    height: 1px;\r\n  }\r\n  h3 {\r\n    margin-bottom: 1rem;\r\n    color: white;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    .row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 0.5rem 0rem;\r\n    }\r\n    label {\r\n      //margin-right: 1rem;\r\n    }\r\n    .currency-input {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n\r\n    input {\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n  button {\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  p {\r\n    color: white;\r\n    padding-left: 1rem;\r\n    font-size: 10pt;\r\n  }\r\n`;\r\n\r\nexport default IncomeForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Logout.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\appSettings\\ApplicationSettings.jsx",["259","260","261","262","263","264","265"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetList.jsx",["266"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetItem.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\seedData.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TableExpandingHeader.jsx",["267","268","269"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Settings.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Sidebar.js",["270"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budget.jsx",["271"],"import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport BudgetList from \"../components/settings/BudgetList\";\r\nimport AddBudgetCategoryForm from \"../components/settings/AddBudgetCategoryForm\";\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\n\r\nconst Budget = () => {\r\n  \r\n  const {currentBudget, updateAllocatedFunds} = useContext(GlobalContext);\r\n\r\n  const allocatedFundsTotal = currentBudget.data.budgetCategories\r\n    .map(category => category.amount)\r\n    .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n  \r\n  useEffect(() => {\r\n    updateAllocatedFunds(allocatedFundsTotal);\r\n  },[allocatedFundsTotal])\r\n\r\n  return (\r\n    <StyledBudget>\r\n      <div className=\"heading\">\r\n        <div className=\"item\">\r\n          <h3>Income:</h3>\r\n          <p className=\"income-color\">${Number(currentBudget.data.income.annualNet/100).toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"item\">\r\n          <h3>Allocated:</h3>\r\n          <p className=\"allocated-color\">${Number(allocatedFundsTotal/100).toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"item\">\r\n          <h3>Balance:</h3>\r\n          <p className=\"balance-color\">${Number(currentBudget.data.income.annualNet/100-allocatedFundsTotal/100).toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"charts\">\r\n        <AddBudgetCategoryForm />\r\n        <h3 className=\"\">Budgets by category</h3>\r\n        <BudgetList />\r\n      </div>\r\n    </StyledBudget>\r\n  );\r\n};\r\n\r\nconst StyledBudget = styled(motion.div)`\r\n  padding-top: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  row-gap: 1rem;\r\n  \r\n  .heading {\r\n    width: 70vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 1rem;\r\n    \r\n    .item {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      column-gap: 1rem;\r\n      \r\n      h3 {\r\n        font-size: 1.5rem; \r\n      }\r\n\r\n      p {\r\n        //color: #00b4ee;\r\n        font-size: 1.5rem;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .title {\r\n    align-self: flex-start;\r\n    padding-left: 15vw;\r\n  }\r\n\r\n  .charts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 70vw;\r\n    gap: 2rem;\r\n  }\r\n`;\r\n\r\nexport default Budget;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryForm.jsx",["272","273","274"],"import { useState, useContext } from \"react\";\r\n//style\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport {FaChevronDown, FaChevronUp} from \"react-icons/fa\"\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { updateBudgetLocally } from \"../../utilities\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//UUID inique ID generator\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { formatStrings, divideValues, multiplyValues } from \"../../utilities\";\r\n\r\nconst AddBudgetCategoryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    category: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [showForm, toggleShowForm] = useState(false);\r\n\r\n  const {\r\n    updateBudget,\r\n    budgets,\r\n    currentBudget,\r\n    updateCurrentBudget,\r\n    currencySymbol,\r\n  } = useContext(GlobalContext);\r\n\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"ADDED\":\r\n        toast.dark(\"Budget Category Added\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.warn(\r\n          \"Please enter a name and description longer than 5 characters\",\r\n          { color: \"black\" }\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  const handleValidation = (formData) => {\r\n    let valid = true;\r\n    //console.log(formData.name.length);\r\n    // if (formData.name.length < 5 || formData.description.length < 5) {\r\n    //   valid = false;\r\n    // }\r\n    return valid;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    //console.log(`${e.target.name}: ${e.target.value}`);\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    //check if component mounted\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: Number(e.target.value).toFixed(2)\r\n      //[e.target.name]: Number(e.target.value).toFixed(2),\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (handleValidation(formData)) {\r\n      \r\n      const newBudgetCategory = {\r\n        id: uuidv4(),\r\n        category: formData.category.toLowerCase() || \"Category\",\r\n        amount: Number(formData.amount) * 100,\r\n        items: []\r\n      };\r\n\r\n      const updatedBudget = {\r\n        ...currentBudget,\r\n        data: {\r\n          ...currentBudget.data,\r\n          budgetCategories: [...currentBudget.data.budgetCategories, newBudgetCategory],\r\n        },\r\n      }\r\n\r\n      //add budget to app context\r\n      updateBudget(updatedBudget);\r\n\r\n      //save budget to local storage\r\n      updateBudgetLocally(budgets, updatedBudget);\r\n\r\n      //update current budget\r\n      updateCurrentBudget(updatedBudget);\r\n\r\n      //reset form\r\n      setFormData({\r\n        category: \"\",\r\n        amount: \"\",\r\n      });\r\n      notify(\"ADDED\");\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledAddBudgetCategoryForm showForm={showForm}>\r\n      <ToastContainer\r\n        closeButton={false}\r\n        transition={Zoom}\r\n        position=\"bottom-center\"\r\n        draggable={false}\r\n        pauseOnHover\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n      />\r\n\r\n      {showForm ? (\r\n        <>\r\n          <div className=\"show-header\">\r\n            <FaChevronDown\r\n            className=\"icon toggle-icon\"\r\n            onClick={() => toggleShowForm(!showForm)}\r\n            />\r\n            <h4>New Budget Category</h4>\r\n          </div>\r\n          \r\n          <form>\r\n            <label>Category:</label>\r\n            <input\r\n              className=\"active-input\"\r\n              name=\"category\"\r\n              type=\"text\"\r\n              value={formData.category}\r\n              onChange={handleChange}\r\n              placeholder=\"Category...\"\r\n            />\r\n            \r\n            <label>Allocation:</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                name=\"amount\"\r\n                type=\"text\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"0.00\"\r\n              />\r\n            </div>\r\n            <button className=\"button\" onClick={onSubmit} id=\"addBudgetButton\">\r\n              Add Category\r\n            </button>\r\n          </form>\r\n            </>\r\n      ) : (\r\n          <div className=\"show-header\">\r\n            <FaChevronUp\r\n            className=\"icon toggle-icon\"\r\n            onClick={() => toggleShowForm(!showForm)}\r\n            />\r\n            <h4>New Budget Category</h4>\r\n          </div>\r\n          \r\n      )}\r\n      \r\n    </StyledAddBudgetCategoryForm>\r\n  );\r\n};\r\n\r\nconst StyledAddBudgetCategoryForm = styled(motion.div)`\r\n  padding: ${({showForm}) => (showForm ? \"1rem\": \"0.25rem\")};\r\n  display: ${({ showForm }) => (showForm ? \"flex\" : \"none\")};\r\n  border-radius: 4px;\r\n  background-color: ${({showForm}) => (showForm ? \"#39393c\": \"transparent\")};\r\n  color: #848586;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 4rem;\r\n  align-items: ${({showForm}) => (showForm ? \"flex-start\": \"flex-start\")};\r\n  justify-content: center;\r\n  position: relative;\r\n  transition: 0.3s ease-in all;\r\n\r\n  .show-header{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    column-gap: 1rem;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n  }\r\n  \r\n  .toggle-icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    aspect-ratio: 1;\r\n    background-color: #39393c;\r\n    color: #848586;\r\n    border: 2px solid #00b4ee;\r\n    border-radius: 50%;\r\n    padding: 0.25rem;\r\n  }\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    //margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    //font-size: 10pt;\r\n    width: 100%;\r\n  }\r\n  label {\r\n    margin-right: 0.25rem;\r\n  }\r\n  input{\r\n    padding: 0.25rem;\r\n    //outline: none;\r\n    //margin-right: 1rem;\r\n  }\r\n  .currency-input{\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport default AddBudgetCategoryForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\AllocatedBudget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\UncategorizedBudget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\ItemTotal.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\CategorizedBudget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Progressbar.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryItemForm.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\ExpeditureByIncomeWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budgets.jsx",["275"],"import { useContext, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//context\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\nimport AddBudgetForm from \"../components/budget/AddBudgetForm\";\r\nimport BudgetList from \"../components/budget/BudgetList\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { seedData } from \"../seedData\";\r\n\r\nconst Budgets = () => {\r\n\r\n  const { loadBudgets } = useContext(GlobalContext);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const data = seedData();\r\n  //setData\r\n  //data.setData()\r\n  //console.log(data)\r\n  \r\n  //get seed data\r\n  useEffect(() => {\r\n    data.getLocalData().then(\r\n      (response) => {\r\n        //save returned data to global context\r\n        loadBudgets(response);\r\n        //set loading flag to false\r\n        setLoading(false);\r\n      },\r\n      (reject) => {\r\n        //on reject log error\r\n        console.log(reject);\r\n        //set loading flag to false\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <StyledBudgetContainer>\r\n        <h3>Budgets</h3>\r\n      <div className=\"main\">\r\n        {!isLoading ? (\r\n          <>\r\n            <AddBudgetForm />\r\n            <BudgetList />\r\n          </>\r\n        ) : (\r\n            <Spinner />\r\n        )}\r\n      </div>\r\n    </StyledBudgetContainer>\r\n  );\r\n};\r\n\r\nconst StyledBudgetContainer = styled(motion.div)`\r\n  padding-top: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  h3{\r\n    align-self: flex-start;\r\n    padding-left: 15vw;\r\n  }\r\n  \r\n  .main {\r\n    width: 70vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    row-gap: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport default Budgets;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Income.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Summary.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\utilities.js",["276"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureByCategoryWidget.jsx",["277","278","279","280","281","282","283","284","285"],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":41,"column":3,"nodeType":"292","messageId":"293","endLine":41,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":3,"column":18,"nodeType":"296","messageId":"297","endLine":3,"endColumn":23},{"ruleId":"294","severity":1,"message":"298","line":14,"column":8,"nodeType":"296","messageId":"297","endLine":14,"endColumn":27},{"ruleId":"299","severity":1,"message":"300","line":70,"column":25,"nodeType":"301","messageId":"302","endLine":70,"endColumn":36},{"ruleId":"303","severity":1,"message":"304","line":164,"column":13,"nodeType":"305","endLine":166,"endColumn":7},{"ruleId":"294","severity":1,"message":"306","line":39,"column":9,"nodeType":"296","messageId":"297","endLine":39,"endColumn":17},{"ruleId":"294","severity":1,"message":"307","line":8,"column":3,"nodeType":"296","messageId":"297","endLine":8,"endColumn":24},{"ruleId":"294","severity":1,"message":"308","line":9,"column":3,"nodeType":"296","messageId":"297","endLine":9,"endColumn":24},{"ruleId":"294","severity":1,"message":"309","line":5,"column":31,"nodeType":"296","messageId":"297","endLine":5,"endColumn":55},{"ruleId":"310","severity":1,"message":"311","line":48,"column":5,"nodeType":"312","endLine":48,"endColumn":7,"suggestions":"313"},{"ruleId":"294","severity":1,"message":"314","line":87,"column":9,"nodeType":"296","messageId":"297","endLine":87,"endColumn":23},{"ruleId":"294","severity":1,"message":"315","line":98,"column":9,"nodeType":"296","messageId":"297","endLine":98,"endColumn":26},{"ruleId":"294","severity":1,"message":"316","line":109,"column":9,"nodeType":"296","messageId":"297","endLine":109,"endColumn":27},{"ruleId":"294","severity":1,"message":"317","line":6,"column":10,"nodeType":"296","messageId":"297","endLine":6,"endColumn":24},{"ruleId":"294","severity":1,"message":"318","line":6,"column":26,"nodeType":"296","messageId":"297","endLine":6,"endColumn":36},{"ruleId":"294","severity":1,"message":"319","line":15,"column":5,"nodeType":"296","messageId":"297","endLine":15,"endColumn":17},{"ruleId":"294","severity":1,"message":"320","line":16,"column":5,"nodeType":"296","messageId":"297","endLine":16,"endColumn":24},{"ruleId":"294","severity":1,"message":"321","line":19,"column":10,"nodeType":"296","messageId":"297","endLine":19,"endColumn":17},{"ruleId":"294","severity":1,"message":"322","line":19,"column":19,"nodeType":"296","messageId":"297","endLine":19,"endColumn":29},{"ruleId":"294","severity":1,"message":"323","line":25,"column":9,"nodeType":"296","messageId":"297","endLine":25,"endColumn":28},{"ruleId":"294","severity":1,"message":"324","line":9,"column":11,"nodeType":"296","messageId":"297","endLine":9,"endColumn":24},{"ruleId":"294","severity":1,"message":"325","line":26,"column":42,"nodeType":"296","messageId":"297","endLine":26,"endColumn":58},{"ruleId":"326","severity":1,"message":"327","line":89,"column":33,"nodeType":"328","messageId":"329","endLine":89,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":99,"column":43,"nodeType":"328","messageId":"329","endLine":99,"endColumn":45},{"ruleId":"294","severity":1,"message":"330","line":8,"column":10,"nodeType":"296","messageId":"297","endLine":8,"endColumn":18},{"ruleId":"310","severity":1,"message":"331","line":18,"column":5,"nodeType":"312","endLine":18,"endColumn":26,"suggestions":"332"},{"ruleId":"294","severity":1,"message":"333","line":14,"column":10,"nodeType":"296","messageId":"297","endLine":14,"endColumn":23},{"ruleId":"294","severity":1,"message":"334","line":14,"column":25,"nodeType":"296","messageId":"297","endLine":14,"endColumn":37},{"ruleId":"294","severity":1,"message":"335","line":14,"column":39,"nodeType":"296","messageId":"297","endLine":14,"endColumn":53},{"ruleId":"310","severity":1,"message":"336","line":37,"column":6,"nodeType":"312","endLine":37,"endColumn":8,"suggestions":"337"},{"ruleId":"326","severity":1,"message":"338","line":322,"column":27,"nodeType":"328","messageId":"329","endLine":322,"endColumn":29},{"ruleId":"294","severity":1,"message":"339","line":7,"column":10,"nodeType":"296","messageId":"297","endLine":7,"endColumn":13},{"ruleId":"294","severity":1,"message":"340","line":11,"column":8,"nodeType":"296","messageId":"297","endLine":11,"endColumn":25},{"ruleId":"294","severity":1,"message":"307","line":13,"column":3,"nodeType":"296","messageId":"297","endLine":13,"endColumn":24},{"ruleId":"294","severity":1,"message":"308","line":14,"column":3,"nodeType":"296","messageId":"297","endLine":14,"endColumn":24},{"ruleId":"294","severity":1,"message":"341","line":15,"column":3,"nodeType":"296","messageId":"297","endLine":15,"endColumn":26},{"ruleId":"294","severity":1,"message":"342","line":20,"column":10,"nodeType":"296","messageId":"297","endLine":20,"endColumn":16},{"ruleId":"294","severity":1,"message":"343","line":36,"column":9,"nodeType":"296","messageId":"297","endLine":36,"endColumn":27},{"ruleId":"294","severity":1,"message":"344","line":74,"column":9,"nodeType":"296","messageId":"297","endLine":74,"endColumn":16},{"ruleId":"294","severity":1,"message":"345","line":110,"column":9,"nodeType":"296","messageId":"297","endLine":110,"endColumn":13},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],"no-dupe-keys","Duplicate key 'currentBudget'.","ObjectExpression","unexpected","no-unused-vars","'frame' is defined but never used.","Identifier","unusedVar","'UncategorizedBudget' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'seedData' is assigned a value but never used.","'getAllocatedPerPeriod' is defined but never used.","'getNetIncomeForPeriod' is defined but never used.","'sortByCategoryThenByItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'incomeData'. Either include it or remove the dependency array. You can also do a functional update 'setIncomeData(i => ...)' if you only need 'incomeData' in the 'setIncomeData' call.","ArrayExpression",["348"],"'validateAnnual' is assigned a value but never used.","'validateAllowance' is assigned a value but never used.","'validateDeductions' is assigned a value but never used.","'RiEyeCloseLine' is defined but never used.","'RiEye2Line' is defined but never used.","'updateBudget' is assigned a value but never used.","'updateCurrentBudget' is assigned a value but never used.","'widgets' is assigned a value but never used.","'setWidgets' is assigned a value but never used.","'handleChangeSetting' is assigned a value but never used.","'currentBudget' is assigned a value but never used.","'includeMandatory' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'BiAbacus' is defined but never used.","React Hook useEffect has a missing dependency: 'updateAllocatedFunds'. Either include it or remove the dependency array.",["349"],"'formatStrings' is defined but never used.","'divideValues' is defined but never used.","'multiplyValues' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'loadBudgets'. Either include them or remove the dependency array.",["350"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","'Bar' is defined but never used.","'AllocatedSelector' is defined but never used.","'getAccumulatedSubTotals' is defined but never used.","'period' is assigned a value but never used.","'handlePeriodChange' is assigned a value but never used.","'options' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [incomeData]",{"range":"357","text":"358"},"Update the dependencies array to be: [allocatedFundsTotal, updateAllocatedFunds]",{"range":"359","text":"360"},"Update the dependencies array to be: [data, loadBudgets]",{"range":"361","text":"362"},[1630,1632],"[incomeData]",[704,725],"[allocatedFundsTotal, updateAllocatedFunds]",[1063,1065],"[data, loadBudgets]"]