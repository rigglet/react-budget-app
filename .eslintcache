[{"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\index.js":"1","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\App.js":"2","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\styles\\GlobalStyle.js":"3","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Nav.js":"4","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\GlobalContext.js":"5","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\SubNav.js":"6","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Dashboard.jsx":"7","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\Reducer.js":"8","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\DateFilter.jsx":"9","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Tracker.jsx":"10","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ConfigureDash.jsx":"11","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Expenditure.jsx":"12","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\BudgetList.jsx":"13","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\AddBudgetForm.jsx":"14","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByItemWidget.jsx":"15","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByCategoryWidget.jsx":"16","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\SalaryWidget.jsx":"17","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureWidget.jsx":"18","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\data.js":"19","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AllocatedWidget.jsx":"20","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetList.jsx":"21","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddTransactionForm.jsx":"22","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\Budget.jsx":"23","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Spinner.jsx":"24","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TransactionList.jsx":"25","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedSelector.jsx":"26","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\Table.jsx":"27","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedChart.jsx":"28","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetItem.jsx":"29","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Transaction.jsx":"30","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureChart.jsx":"31","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureFigures.jsx":"32","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\MandatoryTransactionList.jsx":"33","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AnnualOverviewWidget.jsx":"34","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\IncomeWidget.jsx":"35","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\IncomeForm.jsx":"36","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Logout.js":"37","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\appSettings\\ApplicationSettings.jsx":"38","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetList.jsx":"39","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetItem.jsx":"40","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\seedData.js":"41","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TableExpandingHeader.jsx":"42","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Settings.jsx":"43","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Sidebar.js":"44","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\UncategorizedBudget.jsx":"45","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\CategorizedBudget.jsx":"46","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryForm.jsx":"47","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Progressbar.jsx":"48","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryItemForm.jsx":"49","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Summary.jsx":"50","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Income.jsx":"51","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budgets.jsx":"52","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budget.jsx":"53","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\utilities.js":"54","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\allocatedBudget.jsx":"55","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\AllocatedBudget.jsx":"56","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\ItemTotal.jsx":"57"},{"size":265,"mtime":1610801873949,"results":"58","hashOfConfig":"59"},{"size":1277,"mtime":1662289402817,"results":"60","hashOfConfig":"59"},{"size":3184,"mtime":1662400193002,"results":"61","hashOfConfig":"59"},{"size":6022,"mtime":1661769013207,"results":"62","hashOfConfig":"59"},{"size":4003,"mtime":1662392904189,"results":"63","hashOfConfig":"59"},{"size":4874,"mtime":1661723192175,"results":"64","hashOfConfig":"59"},{"size":5213,"mtime":1661971057343,"results":"65","hashOfConfig":"59"},{"size":2409,"mtime":1662393361976,"results":"66","hashOfConfig":"59"},{"size":5286,"mtime":1661723192905,"results":"67","hashOfConfig":"59"},{"size":819,"mtime":1661723193036,"results":"68","hashOfConfig":"59"},{"size":7774,"mtime":1661723192257,"results":"69","hashOfConfig":"59"},{"size":1039,"mtime":1661723192928,"results":"70","hashOfConfig":"59"},{"size":1726,"mtime":1661723192215,"results":"71","hashOfConfig":"59"},{"size":4781,"mtime":1662290236590,"results":"72","hashOfConfig":"59"},{"size":8746,"mtime":1662289893038,"results":"73","hashOfConfig":"59"},{"size":7790,"mtime":1662289870046,"results":"74","hashOfConfig":"59"},{"size":4628,"mtime":1662289900587,"results":"75","hashOfConfig":"59"},{"size":5552,"mtime":1662289910057,"results":"76","hashOfConfig":"59"},{"size":11401,"mtime":1661723193339,"results":"77","hashOfConfig":"59"},{"size":2820,"mtime":1662289846972,"results":"78","hashOfConfig":"59"},{"size":1868,"mtime":1662290289611,"results":"79","hashOfConfig":"59"},{"size":6171,"mtime":1661723192427,"results":"80","hashOfConfig":"59"},{"size":2828,"mtime":1662290168235,"results":"81","hashOfConfig":"59"},{"size":544,"mtime":1661723192160,"results":"82","hashOfConfig":"59"},{"size":2389,"mtime":1661723193143,"results":"83","hashOfConfig":"59"},{"size":2652,"mtime":1662289822601,"results":"84","hashOfConfig":"59"},{"size":2175,"mtime":1662289855485,"results":"85","hashOfConfig":"59"},{"size":1238,"mtime":1661723192229,"results":"86","hashOfConfig":"59"},{"size":2416,"mtime":1661723192865,"results":"87","hashOfConfig":"59"},{"size":1442,"mtime":1661723193115,"results":"88","hashOfConfig":"59"},{"size":1816,"mtime":1661723192269,"results":"89","hashOfConfig":"59"},{"size":7321,"mtime":1662289906487,"results":"90","hashOfConfig":"59"},{"size":5489,"mtime":1661723192980,"results":"91","hashOfConfig":"59"},{"size":5461,"mtime":1662289913640,"results":"92","hashOfConfig":"59"},{"size":6727,"mtime":1661723192386,"results":"93","hashOfConfig":"59"},{"size":12113,"mtime":1662315057268,"results":"94","hashOfConfig":"59"},{"size":1136,"mtime":1661723192129,"results":"95","hashOfConfig":"59"},{"size":3665,"mtime":1661723192189,"results":"96","hashOfConfig":"59"},{"size":1360,"mtime":1661723193091,"results":"97","hashOfConfig":"59"},{"size":2027,"mtime":1661723193068,"results":"98","hashOfConfig":"59"},{"size":10468,"mtime":1661798394670,"results":"99","hashOfConfig":"59"},{"size":20213,"mtime":1661723193011,"results":"100","hashOfConfig":"59"},{"size":1406,"mtime":1661971035216,"results":"101","hashOfConfig":"59"},{"size":4179,"mtime":1661971250945,"results":"102","hashOfConfig":"59"},{"size":1327,"mtime":1662400208841,"results":"103","hashOfConfig":"59"},{"size":6119,"mtime":1662325681252,"results":"104","hashOfConfig":"59"},{"size":6338,"mtime":1662321840294,"results":"105","hashOfConfig":"59"},{"size":896,"mtime":1662238784114,"results":"106","hashOfConfig":"59"},{"size":6359,"mtime":1662325607867,"results":"107","hashOfConfig":"59"},{"size":3740,"mtime":1662400728399,"results":"108","hashOfConfig":"59"},{"size":853,"mtime":1662289752956,"results":"109","hashOfConfig":"59"},{"size":1846,"mtime":1662289376582,"results":"110","hashOfConfig":"59"},{"size":2388,"mtime":1662393130165,"results":"111","hashOfConfig":"59"},{"size":11251,"mtime":1662289649837,"results":"112","hashOfConfig":"59"},{"size":1593,"mtime":1662327665762,"results":"113","hashOfConfig":"59"},{"size":1721,"mtime":1662400865253,"results":"114","hashOfConfig":"59"},{"size":1612,"mtime":1662394416244,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1x8ekdg",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"137"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"137"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"142"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"118"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\index.js",[],["247","248"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\App.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\styles\\GlobalStyle.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Nav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\GlobalContext.js",["249"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\SubNav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Dashboard.jsx",["250"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\Reducer.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\DateFilter.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Tracker.jsx",[],["251","252"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ConfigureDash.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Expenditure.jsx",[],["253","254"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\BudgetList.jsx",["255"],"import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion, frame } from \"framer-motion\";\r\nimport Budget from \"./Budget\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n\r\nconst BudgetList = () => {\r\n  const { budgets } = useContext(GlobalContext);\r\n\r\n  const budgetListAnim = {\r\n    start: { opacity: 0 },\r\n    end: {\r\n      opacity: 1,\r\n      transition: { when: \"beforeChildren\", duration: 1, staggerChildren: 1 },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transition: {\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  const budgetAnim = {\r\n    start: { opacity: 0, y: -50 },\r\n    end: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { duration: 2, ease: \"easeOut\" },\r\n    },\r\n  };\r\n\r\n  const arrBudgets = budgets.map((budget) => (\r\n    <Budget budget={budget} key={budget.id} variants={budgetAnim} />\r\n  ));\r\n\r\n  // const items = array.map((item) => {\r\n  //   return (\r\n  //     <Frame\r\n  //       custom={item}\r\n  //       key={item}\r\n  //       y={-500}\r\n  //       opacity={0}\r\n  //       animate={\"popUp\"}\r\n  //       variants={variants}\r\n  //     >\r\n  //       {item}\r\n  //     </Frame>\r\n  //   );\r\n  // });\r\n  // return <Frame style={containerStyle}>{items}</Frame>;\r\n\r\n  return (\r\n    <StyledBudgetList\r\n      variants={budgetListAnim}\r\n      initial=\"start\"\r\n      animate=\"end\"\r\n      exit=\"exit\"\r\n    >\r\n      {\r\n        /* {budgets.map((budget) => (\r\n        <Budget budget={budget} key={budget.id} variants={budgetAnim} />\r\n      ))} */\r\n        arrBudgets\r\n      }\r\n    </StyledBudgetList>\r\n  );\r\n};\r\n\r\nconst StyledBudgetList = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport default BudgetList;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\AddBudgetForm.jsx",["256","257"],"import { useState, useContext } from \"react\";\r\n//style\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { saveBudgetLocally } from \"../../utilities\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//UUID inique ID generator\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getWidgets } from \"../../data\";\r\nimport UncategorizedBudget from \"../UncategorizedBudget\";\r\n\r\nconst AddBudgetForm = () => {\r\n  const [formData, setFormData] = useState({ name: \"\", description: \"\" });\r\n  const { addBudget, budgets } = useContext(GlobalContext);\r\n\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"ADDED\":\r\n        toast.dark(\"Budget Added\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.warn(\r\n          \"Please enter a name and description longer than 5 characters\",\r\n          { color: \"black\" }\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  const handleValidation = (formData) => {\r\n    let valid = true;\r\n    //console.log(formData.name.length);\r\n    if (formData.name.length < 5 || formData.description.length < 5) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (handleValidation(formData)) {\r\n      const date = new Date(Date.now());\r\n      //const sd = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n      const newBudget = {\r\n        id: uuidv4(),\r\n        saveName: formData.name,\r\n        description: formData.description,\r\n        saveDate:\r\n          date.getDate() +\r\n          \"/\" +\r\n          (date.getMonth() + 1) +\r\n          \"/\" +\r\n          date.getFullYear(),\r\n        data: {\r\n          budgetCategories: [{name: \"UncategorizedBudget\", total: 0}],\r\n          transactions: new Array(),\r\n          income: {\r\n            annualGross: 0,\r\n            taxFreeAllowance: 0,\r\n            taxable: 0,\r\n            incomeTax: 0,\r\n            nationalInsurance: 0,\r\n            totalDeductions: 0,\r\n            annualNet: 0,\r\n            monthlyNet: 0,\r\n            weeklyNet: 0,\r\n          },\r\n        },\r\n        widgets: getWidgets(),\r\n      };\r\n\r\n      //add budget to app context\r\n      addBudget(newBudget);\r\n      //save budget to local storage\r\n      saveBudgetLocally(budgets, newBudget);\r\n      //reset form\r\n      setFormData({ name: \"\", description: \"\" });\r\n      notify(\"ADDED\");\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledAddbudgetForm>\r\n        <ToastContainer\r\n          closeButton={false}\r\n          transition={Zoom}\r\n          position=\"bottom-center\"\r\n          draggable={false}\r\n          pauseOnHover\r\n          autoClose={2000}\r\n          hideProgressBar\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n        />\r\n        \r\n        <h4>New Budget</h4>\r\n        <form>\r\n          <label>Name:</label>\r\n          <input\r\n            className=\"active-input\"\r\n            size=\"30\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Name...\"\r\n          />\r\n          <label>Description:</label>\r\n          <input\r\n            className=\"active-input\"\r\n            size=\"40\"\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            placeholder=\"Description...\"\r\n          />\r\n          <button className=\"button\" onClick={onSubmit} id=\"addBudgetButton\">\r\n            Add Budget\r\n          </button>\r\n        </form>\r\n      </StyledAddbudgetForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledAddbudgetForm = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  //align-items: flex-start;\r\n  //justify-content: space-between;\r\n  //margin-bottom: 1rem;\r\n  padding: 1rem 1.5rem;\r\n  //min-width: 100%;\r\n  //min-height: 8vh;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  //border-left: transparent 0.25rem solid;\r\n  color: #848586;\r\n  width: 70vw;\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 10pt;\r\n    width: 100%;\r\n  }\r\n  label {\r\n    margin-right: 0.25rem;\r\n  }\r\n  input {\r\n    padding: 0.25rem;\r\n    outline: none;\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport default AddBudgetForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByItemWidget.jsx",["258"],"import { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../context/GlobalContext\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { formatNumber } from \"../../../util\";\r\nimport AllocatedSelector from \"../AllocatedSelector\";\r\nimport { getNetIncomeForPeriod, getAllocatedPerPeriod } from \"../../../util\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n//icons\r\nimport { AiOutlineTable } from \"react-icons/ai\";\r\nimport { GoGraph } from \"react-icons/go\";\r\n//chart\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nconst BudgetByItemWidget = () => {\r\n  const [toggleTable, setToggleTable] = useState(false);\r\n  const [period, setPeriod] = useState(\"daily\");\r\n  const { currencySymbol, currentBudget } = useContext(GlobalContext);\r\n  const budgetItems = currentBudget.data.budgetItems;\r\n  let netIncomeForPeriod = getNetIncomeForPeriod(currentBudget, period);\r\n  let totalAllocatedForPeriod = getAllocatedPerPeriod(currentBudget, period);\r\n\r\n  //let subTotal = getAllocatedPerPeriod(currentBudget, period);\r\n  //let selectedPeriod = getNetIncomeForPeriod(currentBudget, period);\r\n  const remaining = (netIncomeForPeriod - totalAllocatedForPeriod).toFixed(2);\r\n\r\n  const handlePeriodChange = (v) => {\r\n    setPeriod(v);\r\n  };\r\n\r\n  //toggle beteen chart and table\r\n  const handleChangeView = () => {\r\n    setToggleTable(!toggleTable);\r\n  };\r\n\r\n  const getItemAmountPerYear = (amount, frequency) => {\r\n    switch (frequency) {\r\n      case \"daily\":\r\n        return amount * 365;\r\n      case \"weekly\":\r\n        return amount * 52;\r\n      case \"monthly\":\r\n        return amount * 12;\r\n      case \"annually\":\r\n        return amount;\r\n      default:\r\n        return amount;\r\n    }\r\n  };\r\n\r\n  //pass in YEARLY AMOUNT\r\n  //selected period comes from period hook\r\n  const getItemAmountPerPeriod = (yearlyAmount) => {\r\n    switch (period) {\r\n      case \"daily\":\r\n        return yearlyAmount / 365;\r\n      case \"weekly\":\r\n        return yearlyAmount / 52;\r\n      case \"monthly\":\r\n        return yearlyAmount / 12;\r\n      case \"annually\":\r\n        return yearlyAmount;\r\n      default:\r\n        return yearlyAmount;\r\n    }\r\n  };\r\n\r\n  //TABLE DATA\r\n  const rows = budgetItems.map((item) => {\r\n    return [\r\n      item.category,\r\n      item.item,\r\n      getItemAmountPerPeriod(getItemAmountPerYear(item.amount, item.frequency)),\r\n      (100 / totalAllocatedForPeriod) *\r\n        getItemAmountPerPeriod(\r\n          getItemAmountPerYear(item.amount, item.frequency)\r\n        ),\r\n      (100 / netIncomeForPeriod) *\r\n        getItemAmountPerPeriod(\r\n          getItemAmountPerYear(item.amount, item.frequency)\r\n        ),\r\n    ];\r\n  });\r\n\r\n  //CHART DATA\r\n  const d = rows.map((item) => {\r\n    return item[4].toFixed(2);\r\n  });\r\n  const l = budgetItems.map((item) => item.item);\r\n\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: `Budget breakdown by category (${currencySymbol})`,\r\n      position: \"bottom\",\r\n      fontSize: 16,\r\n      fontStyle: \"bold\",\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: l,\r\n    datasets: [\r\n      {\r\n        borderColor: [\"#00b4ee\", \"#00b4ee\"],\r\n        label: \"Allocated / Remaining\",\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 0.5,\r\n        pointHoverRadius: 1,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 1,\r\n        pointRadius: 1,\r\n        pointHitRadius: 1,\r\n        backgroundColor: [\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n        ],\r\n        hoverBackgroundColor: [\"#628bb4\"],\r\n        data: d,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <StyledBreakdown>\r\n      <div className=\"heading\">\r\n        <h4>Budget breakdown by item</h4>\r\n        {currentBudget.data.income.yearlyNet > 0 &&\r\n          currentBudget.data.budgetItems.length > 0 && (\r\n            <div className=\"iconSelect\">\r\n              {toggleTable ? (\r\n                <AiOutlineTable\r\n                  className=\"icon\"\r\n                  onClick={() => handleChangeView()}\r\n                />\r\n              ) : (\r\n                <GoGraph className=\"icon\" onClick={() => handleChangeView()} />\r\n              )}\r\n            </div>\r\n          )}\r\n      </div>\r\n      //TODO: Chart not displaying data correctly\r\n      {currentBudget.data.income.yearlyNet > 0 &&\r\n      currentBudget.data.budgetItems.length > 0 ? (\r\n        <div className=\"data\">\r\n          {toggleTable ? (\r\n            <div className=\"chart\">\r\n              <Pie data={data} options={options} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"info\">\r\n              <AllocatedSelector\r\n                period={period}\r\n                handlePeriodChange={handlePeriodChange}\r\n                subTotal={totalAllocatedForPeriod}\r\n                remaining={remaining}\r\n                selectedPeriod={netIncomeForPeriod}\r\n              />\r\n              <div className=\"table\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>\r\n                        <h5>Category</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>Item</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>Item sub-total</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>% of allocated</h5>\r\n                      </th>\r\n                      <th>\r\n                        <h5>% of total</h5>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {rows\r\n                      .sort((a, b) => (a[2] < b[2] ? 1 : -1))\r\n                      .map((budgetItem, i) => (\r\n                        <tr key={uuidv4()}>\r\n                          <td>\r\n                            <p className=\"tableItem\">{budgetItem[0]}</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">{budgetItem[1]}</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">\r\n                              <span className=\"symbol\">{currencySymbol} </span>\r\n                              {formatNumber(budgetItem[2])}\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">\r\n                              {formatNumber(budgetItem[3])} %\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"tableItem\">\r\n                              {formatNumber(budgetItem[4])} %\r\n                            </p>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <p>No data to display.</p>\r\n          <p>Please enter income figures and budget.</p>\r\n        </>\r\n      )}\r\n    </StyledBreakdown>\r\n  );\r\n};\r\n\r\nconst StyledBreakdown = styled(motion.div)`\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n  width: 100%;\r\n  .info,\r\n  .chart {\r\n    width: 100%;\r\n  }\r\n  .heading {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .icon {\r\n      width: 25px;\r\n      height: 25px;\r\n      color: white;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .data {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    .drop {\r\n      margin-bottom: 0.25rem;\r\n      label {\r\n        margin-right: 0.25rem;\r\n      }\r\n    }\r\n    .figures {\r\n      display: flex;\r\n      gap: 1rem;\r\n    }\r\n  }\r\n  table {\r\n    width: 100%;\r\n    .tableItem {\r\n      text-transform: capitalize;\r\n    }\r\n    th {\r\n      text-align: center;\r\n    }\r\n    td {\r\n      text-align: center;\r\n      //min-width: 30%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BudgetByItemWidget;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByCategoryWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\SalaryWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\data.js",["259"],"export const getWidgets = () => {\r\n  return {\r\n    incomeWidgets: [\r\n      {\r\n        name: \"Salary gross and net breakdown\",\r\n        selected: false,\r\n      },\r\n    ],\r\n    budgetWidgets: [\r\n      {\r\n        name: \"Budget allocated / remaining\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Budget breakdown by category\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Budget breakdown by item\",\r\n        selected: false,\r\n      },\r\n    ],\r\n    expenditureWidgets: [\r\n      {\r\n        name: \"Salary v Budget v Expenditure\",\r\n        selected: false,\r\n      },\r\n    ],\r\n    trackerWidgets: [\r\n      {\r\n        name: \"Tracker\",\r\n        selected: false,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const getData = () => {\r\n  const seedData = [\r\n    {\r\n      id: \"1\",\r\n      saveName: \"Julie\",\r\n      saveDate: \"02/10/2020\",\r\n      description: \"Julie salary budget\",\r\n      widgets: getWidgets(),\r\n      data: {\r\n        transactions: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 1.0,\r\n          },\r\n        ],\r\n        budgetItems: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            frequency: \"weekly\",\r\n            amount: 288.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            frequency: \"monthly\",\r\n            amount: 51.57,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            frequency: \"monthly\",\r\n            amount: 11.39,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 4,\r\n            category: \"car\",\r\n            item: \"tax\",\r\n            frequency: \"annually\",\r\n            amount: 150.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 5,\r\n            category: \"car\",\r\n            item: \"insurance\",\r\n            frequency: \"annually\",\r\n            amount: 353.17,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 28,\r\n            category: \"bills\",\r\n            frequency: \"monthly\",\r\n            id: \"fdf487aa-040a-4c91-9d34-e221e0ae5ffc\",\r\n            item: \"school union naht\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 22.67,\r\n            category: \"car\",\r\n            frequency: \"monthly\",\r\n            id: \"921c8c21-515c-4cb3-bf7c-c740df5d02d8\",\r\n            item: \"servicing\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 100,\r\n            category: \"car\",\r\n            frequency: \"monthly\",\r\n            id: \"df78edab-e316-49ea-ae8c-9f20aca86132\",\r\n            item: \"petrol\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 60,\r\n            category: \"clothing\",\r\n            frequency: \"monthly\",\r\n            id: \"d88713f0-5f12-4381-bae4-e1c235b8af68\",\r\n            item: \"clothes shoes\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 150,\r\n            category: \"entertainment\",\r\n            frequency: \"weekly\",\r\n            id: \"49b5acbe-1921-4219-8ee6-8c153ed08472\",\r\n            item: \"eating out\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 57,\r\n            category: \"excercise\",\r\n            frequency: \"monthly\",\r\n            id: \"ad402800-0ca9-417d-9b24-9fd6e645a3fb\",\r\n            item: \"gym\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 235.06,\r\n            category: \"financial\",\r\n            frequency: \"monthly\",\r\n            id: \"1c39a1e6-eb1d-4722-a6e8-1936e279e45d\",\r\n            item: \"car loan\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 400,\r\n            category: \"financial\",\r\n            frequency: \"monthly\",\r\n            id: \"13a75aed-5b72-47ff-86b4-637d6a51257b\",\r\n            item: \"savings\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            amount: 80,\r\n            category: \"health\",\r\n            frequency: \"annually\",\r\n            id: \"f6491402-4ccd-4af0-a572-50f469cfea5d\",\r\n            item: \"prescriptions\",\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n        ],\r\n        income: {\r\n          annual: 63000.0,\r\n          allowance: 12509.0,\r\n          taxable: 50491.0,\r\n          tax: 12698.2,\r\n          ni: 5120.0,\r\n          contributions: 21802.08,\r\n          yearlyNet: 41197.92,\r\n          monthlyNet: 3433.16,\r\n          weeklyNet: 792.27,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"2\",\r\n      saveName: \"Neil\",\r\n      saveDate: \"02/10/2020\",\r\n      description: \"Neil salary budget\",\r\n      widgets: getWidgets(),\r\n      data: {\r\n        transactions: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            date: \"07-02-2021\",\r\n            amount: 1.0,\r\n          },\r\n        ],\r\n        budgetItems: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            frequency: \"weekly\",\r\n            amount: 10.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            frequency: \"monthly\",\r\n            amount: 10.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            frequency: \"monthly\",\r\n            amount: 0.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 4,\r\n            category: \"car\",\r\n            item: \"tax\",\r\n            frequency: \"annually\",\r\n            amount: 40.0,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n          {\r\n            id: 5,\r\n            category: \"car\",\r\n            item: \"insurance\",\r\n            frequency: \"annually\",\r\n            amount: 0.17,\r\n            paid: false,\r\n            mandatory: false,\r\n          },\r\n        ],\r\n        income: {\r\n          annual: 15000.0,\r\n          allowance: 0.0,\r\n          taxable: 0.0,\r\n          tax: 0.2,\r\n          ni: 0.0,\r\n          contributions: 0.0,\r\n          yearlyNet: 15000.0,\r\n          monthlyNet: 1250.0,\r\n          weeklyNet: 288.46,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: \"3\",\r\n      saveName: \"Basic\",\r\n      saveDate: \"02/10/2020\",\r\n      description: \"Basic test figures\",\r\n      widgets: getWidgets(),\r\n      data: {\r\n        transactions: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 1.0,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 2.0,\r\n            paid: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            date: \"07 - 02 - 2021\",\r\n            amount: 3.0,\r\n            paid: false,\r\n          },\r\n        ],\r\n        budgetItems: [\r\n          {\r\n            id: 1,\r\n            category: \"accommodation\",\r\n            item: \"rent\",\r\n            frequency: \"weekly\",\r\n            amount: 1.0,\r\n            paid: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            category: \"bills\",\r\n            item: \"phone\",\r\n            frequency: \"monthly\",\r\n            amount: 2.0,\r\n            paid: false,\r\n          },\r\n          {\r\n            id: 3,\r\n            category: \"bills\",\r\n            item: \"council tax\",\r\n            frequency: \"monthly\",\r\n            amount: 3.0,\r\n            paid: false,\r\n          },\r\n        ],\r\n        income: {\r\n          annual: 100.0,\r\n          allowance: 80.0,\r\n          taxable: 20.0,\r\n          tax: 5.0,\r\n          ni: 5.0,\r\n          contributions: 10.0,\r\n          yearlyNet: 90.0,\r\n          monthlyNet: 7.5,\r\n          weeklyNet: 1.73,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  //window.localStorage.setItem(\"EXPENSE-APP\", JSON.stringify(seedData));\r\n  const data = JSON.parse(window.localStorage.getItem(\"EXPENSE-APP\"));\r\n\r\n  //console.log({ data });\r\n  return new Promise((resolve, reject) => {\r\n    if (data !== undefined && data !== null) {\r\n      setTimeout(() => {\r\n        resolve(data);\r\n      }, 1000);\r\n    } else {\r\n      reject(\"Nope\");\r\n    }\r\n  });\r\n};\r\n\r\n// function imgLoad(url) {\r\n//   // Create new promise with the Promise() constructor;\r\n//   // This has as its argument a function\r\n//   // with two parameters, resolve and reject\r\n//   return new Promise(function (resolve, reject) {\r\n//     // Standard XHR to load an image\r\n//     var request = new XMLHttpRequest();\r\n//     request.open(\"GET\", url);\r\n//     request.responseType = \"blob\";\r\n//     // When the request loads, check whether it was successful\r\n//     request.onload = function () {\r\n//       if (request.status === 200) {\r\n//         // If successful, resolve the promise by passing back the request response\r\n//         resolve(request.response);\r\n//       } else {\r\n//         // If it fails, reject the promise with a error message\r\n//         reject(\r\n//           Error(\r\n//             \"Image didn't load successfully; error code:\" + request.statusText\r\n//           )\r\n//         );\r\n//       }\r\n//     };\r\n//     request.onerror = function () {\r\n//       // Also deal with the case when the entire request fails to begin with\r\n//       // This is probably a network error, so reject the promise with an appropriate message\r\n//       reject(Error(\"There was a network error.\"));\r\n//     };\r\n//     // Send the request\r\n//     request.send();\r\n//   });\r\n// }\r\n// // Get a reference to the body element, and create a new image object\r\n// var body = document.querySelector(\"body\");\r\n// var myImage = new Image();\r\n// // Call the function with the URL we want to load, but then chain the\r\n// // promise then() method on to the end of it. This contains two callbacks\r\n// imgLoad(\"myLittleVader.jpg\").then(\r\n//   function (response) {\r\n//     // The first runs when the promise resolves, with the request.response\r\n//     // specified within the resolve() method.\r\n//     var imageURL = window.URL.createObjectURL(response);\r\n//     myImage.src = imageURL;\r\n//     body.appendChild(myImage);\r\n//     // The second runs when the promise\r\n//     // is rejected, and logs the Error specified with the reject() method.\r\n//   },\r\n//   function (Error) {\r\n//     console.log(Error);\r\n//   }\r\n// );\r\n\r\n//#############################################################\r\n// TODO:\r\n// THINGS LEARNED:\r\n// complex: destructuring of arrays, objects and objects arrays\r\n// react-calendar\r\n// moment.js\r\n// function\r\n//\r\n//#############################################################\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AllocatedWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetList.jsx",["260"],"import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport { updateBudgetLocally, sortByCategoryThenByItem } from \"../../utilities\";\r\n//import UncategorizedBudget from \"../../components/UncategorizedBudget\"\r\nimport CategorizedBudget from \"../../components/CategorizedBudget\"\r\n\r\nconst BudgetList = () => {\r\n\r\n  const {\r\n    budgets,\r\n    currentBudget,\r\n    updateBudget,\r\n    updateCurrentBudget,\r\n  } = useContext(GlobalContext);\r\n\r\n  const budgetCategories = currentBudget.data.budgetCategories;\r\n  \r\n  const deleteBudgetCategory = (id) => {\r\n    const newBudget = {\r\n      ...currentBudget,\r\n      data: {\r\n        ...currentBudget.data,\r\n        budgetCategories: budgetCategories.filter((item) => item.id !== id),\r\n       },\r\n    };\r\n\r\n    //update global context\r\n    updateBudget(newBudget);\r\n\r\n    //update local storage\r\n    updateBudgetLocally(budgets, newBudget);\r\n\r\n    //updatecurrentBudget\r\n    updateCurrentBudget(newBudget);\r\n  };\r\n\r\n  //console.log(sortByCategoryThenByItem(budgetCategories));\r\n\r\n  return (\r\n    <StyledBudgetList>\r\n        \r\n      {/* <UncategorizedBudget\r\n        uncategorisedTotal={uncategorisedTotal}\r\n        uncategorisedBudgetTotal={uncategorisedBudgetTotal}\r\n        uncategorisedPercentage={uncategorisedPercentage}\r\n      /> */}\r\n      \r\n      {\r\n        budgetCategories.map((category) => (\r\n          <CategorizedBudget\r\n            key={category.id}\r\n            budgetCategory={category}\r\n            deleteBudgetCategory={deleteBudgetCategory}\r\n          />\r\n        ))\r\n        }\r\n      \r\n    </StyledBudgetList>\r\n  );\r\n};\r\n\r\nconst StyledBudgetList = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 1rem;\r\n  color: #848586;\r\n`;\r\n\r\nexport default BudgetList;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddTransactionForm.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\Budget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Spinner.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TransactionList.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedSelector.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\Table.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedChart.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetItem.jsx",[],["261","262"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Transaction.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureChart.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ExpenditureFigures.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\MandatoryTransactionList.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AnnualOverviewWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\IncomeWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\IncomeForm.jsx",["263","264","265","266"],"import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { formatStrings, divideValues, multiplyValues, updateBudgetLocally } from \"../../utilities\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst IncomeForm = () => {\r\n  //global context\r\n  const {\r\n    updateBudget,\r\n    budgets,\r\n    updateCurrentBudget,\r\n    currentBudget,\r\n    currencySymbol,\r\n  } = useContext(GlobalContext);\r\n\r\n  //form data hook\r\n  const [incomeData, setIncomeData] = useState(\r\n    //divide values by 100\r\n    divideValues(currentBudget?.data?.income)\r\n    // {...currentBudget?.data?.income}\r\n  );\r\n\r\n    //let annualGross = currentBudget?.data?.income.annualGross;\r\n    //taxFreeAllowance\r\n    let taxable = Number(incomeData.annualGross - incomeData.taxFreeAllowance).toFixed(2);\r\n    \r\n    //incomeTax\r\n    //nationalInsurance\r\n    let totalDeductions = Number(incomeData.nationalInsurance) + Number(incomeData.incomeTax);\r\n    \r\n    let annualNet = incomeData.annualGross - totalDeductions;\r\n    let monthlyNet = Number(annualNet / 12).toFixed(2);\r\n    let weeklyNet = Number(annualNet / 52).toFixed(2);\r\n    //let dailyNet = Number(annualNet / 365).toFixed(2);\r\n    \r\n  annualNet = Number(annualNet).toFixed(2);\r\n  totalDeductions = Number(totalDeductions).toFixed(2);\r\n\r\n  \r\n  useEffect(() => {\r\n    //Format to string to Numbers\r\n    setIncomeData(()=>(formatStrings(incomeData)))\r\n  },[])\r\n    \r\n  //TOAST MESSAGE\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"UPDATED\":\r\n        toast.dark(\"Income updated\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.dark(\"Please enter numbers only\");\r\n        break;\r\n        case \"INVALID ANNUAL\":\r\n          toast.dark(\r\n            \"Please ensure Annual (Net) figure is lower than Annual (gross)\"\r\n        );\r\n        break;\r\n      case \"INVALID ALLOWANCE\":\r\n        toast.dark(\r\n          \"Please ensure Allowance is less than Annual (gross) figure\"\r\n          );\r\n        break;\r\n      case \"INVALID DEDUCTIONS\":\r\n        toast.dark(\r\n          \"Please ensure Total Deductions are less than Annual (gross) figure\"\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  //VALIDATION\r\n  //FORMAT\r\n  const handleFormatValidation = (value) => {\r\n    const reg = /^[0-9]*(?:\\.?)[0-9]*$/;\r\n    return value.match(reg);\r\n  };\r\n\r\n  //NET less than gross annual income\r\n  const validateAnnual = () => {\r\n    let isValid = false;\r\n    if (incomeData.annual > incomeData.annualNet) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID annualGross\");\r\n      document.getElementById(\"annualNet\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const validateAllowance = () => {\r\n    let isValid = false;\r\n    if (incomeData.taxFreeAllowance < incomeData.annualGross) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID ALLOWANCE\");\r\n      document.getElementById(\"taxFreeAllowance\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const validateDeductions = () => {\r\n    let isValid = false;\r\n    if (incomeData.totalDeductions < incomeData.annualGross) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID DEDUCTIONS\");\r\n      document.getElementById(\"totalDeductions\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  //handle form data change\r\n  const handleChange = (e) => {\r\n    if (handleFormatValidation(e.target.value)) {\r\n      setIncomeData(() => ({\r\n        ...incomeData,\r\n        [e.target.name]: e.target.value,\r\n      }));\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    //check if component mounted\r\n    setIncomeData({\r\n      ...incomeData,\r\n      [e.target.name]: Number(e.target.value).toFixed(2)\r\n    });\r\n  };\r\n\r\n  let updatedBudget = {\r\n    ...currentBudget,\r\n    data: {\r\n      ...currentBudget.data,\r\n      // implicit type conversion to number\r\n      // (by multiplying by 100)\r\n      // and stores number without decimal for increased accuracy later\r\n      income: multiplyValues({\r\n        ...incomeData,\r\n        annualGross: incomeData.annualGross,\r\n        taxFreeAllowance: incomeData.taxFreeAllowance,\r\n        taxable: taxable,\r\n        incomeTax: incomeData.incomeTax,\r\n        nationalInsurance: incomeData.nationalInsurance,\r\n        totalDeductions: incomeData.totalDeductions,\r\n        annualNet: annualNet,\r\n        monthlyNet: monthlyNet,\r\n        weeklyNet: weeklyNet,\r\n      }),\r\n    },\r\n  }\r\n  \r\n  //handle form submit\r\n  const handleSaveBudget = () => {\r\n    if (\r\n      // validateAnnual() === true &&\r\n      // validateAllowance() === true &&\r\n      // validateDeductions() === true\r\n      true\r\n    ) {\r\n      //update global provider\r\n      updateBudget(updatedBudget);\r\n      // update local storage\r\n      updateBudgetLocally(budgets, updatedBudget);\r\n      // update current budget\r\n      updateCurrentBudget(updatedBudget);\r\n      \r\n      //toast message\r\n      notify(\"UPDATED\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledIncomeForm>\r\n      <ToastContainer\r\n        closeButton={false}\r\n        transition={Zoom}\r\n        position=\"bottom-center\"\r\n        draggable={false}\r\n        pauseOnHover\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false} \r\n        pauseOnFocusLoss\r\n      />\r\n      <h4>Income Information</h4>\r\n      <div className=\"container\">\r\n        <form>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"annualGross\">Annual Salary (Gross)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"annualGross\"\r\n                id=\"annualGross\"\r\n                value={incomeData.annualGross}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"taxFreeAllowance\">Tax Free Allowance</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"taxFreeAllowance\"\r\n                id=\"taxFreeAllowance\"\r\n                value={incomeData.taxFreeAllowance}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"taxable\">Taxable Income</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"taxable\"\r\n                id=\"taxable\"\r\n                value={taxable}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"incomeTax\">Income Tax</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"incomeTax\"\r\n                id=\"incomeTax\"\r\n                value={incomeData.incomeTax}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"nationalInsurance\">National Insurance</label>\r\n            <div className=\"currency-iput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                type=\"text\"\r\n                name=\"nationalInsurance\"\r\n                id=\"nationalInsurance\"\r\n                value={incomeData.nationalInsurance}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"totalDeductions\">Total deductions</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"totalDeductions\"\r\n                id=\"totalDeductions\"\r\n                value={totalDeductions}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"annualNet\">Annual Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"annualNet\"\r\n                id=\"annualNet\"\r\n                value={annualNet}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"monthlyNet\">Monthly Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"monthlyNet\"\r\n                id=\"monthlyNet\"\r\n                value={monthlyNet}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"weeklyNet\">Weekly Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"inactive-input\"\r\n                type=\"text\"\r\n                name=\"weeklyNet\"\r\n                id=\"weeklyNet\"\r\n                value={weeklyNet}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"row\">\r\n            <label htmlFor=\"dailyNet\">Daily Salary (Net)</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                type=\"text\"\r\n                name=\"dailyNet\"\r\n                id=\"dailyNet\"\r\n                value={dailyNet}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div> */}\r\n        </form>\r\n\r\n        <button className=\"button\" onClick={() => handleSaveBudget()}>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </StyledIncomeForm>\r\n  );\r\n};\r\n\r\nconst StyledIncomeForm = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .charts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 1rem;\r\n    column-gap: 1rem;\r\n  }\r\n\r\n  .line {\r\n    width: 100%;\r\n    margin: 0.5rem;\r\n    background-color: #848586;\r\n    height: 1px;\r\n  }\r\n  h3 {\r\n    margin-bottom: 1rem;\r\n    color: white;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    .row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 0.5rem 0rem;\r\n    }\r\n    label {\r\n      //margin-right: 1rem;\r\n    }\r\n    .currency-input {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n\r\n    input {\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n  button {\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  p {\r\n    color: white;\r\n    padding-left: 1rem;\r\n    font-size: 10pt;\r\n  }\r\n`;\r\n\r\nexport default IncomeForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Logout.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\appSettings\\ApplicationSettings.jsx",["267","268","269","270","271","272","273"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetList.jsx",["274"],"import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport TableExpandingHeader from \"./TableExpandingHeader\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TrackerBudgetList = () => {\r\n  const { currentBudget } = useContext(GlobalContext);\r\n\r\n  //const budgetItems = currentBudget.data.budgetItems;\r\n\r\n  //get set containing month names between a certain date range\r\n  const allMonths = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  return (\r\n    <StyledTrackerBudgetList>\r\n      <h4>Budget allocated vs spent per month</h4>\r\n      {allMonths.map((m) => (\r\n        <TableExpandingHeader key={uuidv4()} uniqueid={uuidv4()} title={m} />\r\n      ))}\r\n    </StyledTrackerBudgetList>\r\n  );\r\n};\r\n\r\nconst StyledTrackerBudgetList = styled(motion.div)`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n  table {\r\n    width: 100%;\r\n  }\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  h5 {\r\n    color: #848586;\r\n    font-variant-caps: all-small-caps;\r\n  }\r\n`;\r\n\r\nexport default TrackerBudgetList;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TrackerBudgetItem.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\seedData.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TableExpandingHeader.jsx",["275","276","277"],"import { useContext, useState } from \"react\";\r\nimport moment from \"moment\";\r\n//styling\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//util\r\nimport {\r\n  getYearlyAllocatedPerDay,\r\n  filterTransactionsByDateRange,\r\n  filterTransactionsByDateRangeAndReturnTotal,\r\n  formatNumber,\r\n  getAccumulatedSubTotals,\r\n} from \"../../util\";\r\n//arrows\r\nimport Xarrow from \"react-xarrows\";\r\n//icons\r\nimport { FaChevronUp, FaChevronDown } from \"react-icons/fa\";\r\nimport { FaGrin, FaFrown } from \"react-icons/fa\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n//components\r\nimport TrackerBudgetItem from \"./TrackerBudgetItem\";\r\n\r\nconst TableExpandingHeader = ({ title, uniqueid }) => {\r\n  const { currentBudget, currencySymbol, includeMandatory } = useContext(\r\n    GlobalContext\r\n  );\r\n  const budgetItems = currentBudget.data.budgetItems;\r\n  const [toggleMandatory, setToggleMandatory] = useState(false);\r\n  const daysInMonth = moment(title, \"MMMM\").daysInMonth();\r\n\r\n  //mandatory budget items\r\n  // const mandatoryBudgetItems = budgetItems.filter(\r\n  //   (item) => item.mandatory === true && !item.paid\r\n  // );\r\n\r\n  const actualBudgetForMonth =\r\n    getYearlyAllocatedPerDay(budgetItems) * daysInMonth;\r\n\r\n  const transactions = currentBudget.data.transactions;\r\n\r\n  const { yearlyNet } = currentBudget.data.income;\r\n  const actualSalaryForMonth = (yearlyNet / 365) * daysInMonth;\r\n\r\n  const range = {\r\n    from: moment(title, \"MMMM\").startOf(\"month\"),\r\n    to: moment(title, \"MMMM\").endOf(\"month\"),\r\n  };\r\n\r\n  const monthlyTransactions = filterTransactionsByDateRange(\r\n    transactions,\r\n    range\r\n  );\r\n\r\n  //budget\r\n  const filteredBCategories = getAccumulatedSubTotals(currentBudget).map(\r\n    (item) => {\r\n      return { ...item, amount: Number(item.amount / 12) };\r\n    }\r\n  );\r\n\r\n  //transaction\r\n  const filteredCategories = [\r\n    ...new Set(monthlyTransactions.map((t) => t.category.toLowerCase())),\r\n  ];\r\n\r\n  const monthlyTransactionsbyCategory = filteredCategories.map((c) => {\r\n    const trans = monthlyTransactions.filter(\r\n      (t) => t.category.toLowerCase() === c\r\n    );\r\n    const amount = trans.reduce((acc, cur) => {\r\n      return Number(acc) + Number(cur.amount);\r\n    }, []);\r\n    return { category: c, amount: amount };\r\n  });\r\n\r\n  //joined data\r\n  const joinedCategories = [\r\n    ...new Set([\r\n      ...monthlyTransactions.map((t) => t.category.toLowerCase()),\r\n      ...filteredBCategories.map((t) => t.category.toLowerCase()),\r\n    ]),\r\n  ];\r\n\r\n  let tableObj = {};\r\n  const joinedTables = joinedCategories.map((c) => {\r\n    tableObj = { category: c };\r\n    filteredBCategories.map((b) => {\r\n      if (c.toLowerCase() === b.category.toLowerCase()) {\r\n        return (tableObj = {\r\n          ...tableObj,\r\n          budgetAmount: b.amount,\r\n          transAmount: 0,\r\n        });\r\n      }\r\n    });\r\n\r\n    monthlyTransactionsbyCategory.map((t) => {\r\n      if (c === t.category) {\r\n        return (tableObj = {\r\n          ...tableObj,\r\n          transAmount: t.amount,\r\n        });\r\n      }\r\n    });\r\n\r\n    return tableObj;\r\n  });\r\n\r\n  //console.log(joinedTables);\r\n\r\n  //calculate amount spent for supplied mmonth\r\n  const spentAmount = filterTransactionsByDateRangeAndReturnTotal(\r\n    transactions,\r\n    range\r\n  );\r\n  //console.log(spentAmount);\r\n  const salaryDifference = actualSalaryForMonth - spentAmount;\r\n  const budgetDifference = actualBudgetForMonth - spentAmount;\r\n\r\n  //ARROWS\r\n  const arrowStyle = {\r\n    curveness: Number(0.6),\r\n    strokeWidth: Number(2),\r\n    dashness: false,\r\n    path: \"smooth\",\r\n  };\r\n  const salToBudgetStyle = {\r\n    ...arrowStyle,\r\n    startAnchor: \"auto\",\r\n    endAnchor: \"auto\",\r\n    color: actualBudgetForMonth < actualSalaryForMonth ? \"#2ba874\" : \"#e2725d\",\r\n  };\r\n  const budgetToSpentStyle = {\r\n    ...arrowStyle,\r\n    startAnchor: \"auto\",\r\n    endAnchor: \"auto\",\r\n    color: spentAmount < actualBudgetForMonth ? \"#2ba874\" : \"#e2725d\",\r\n  };\r\n  const spentToBudgetDiffStyle = {\r\n    ...arrowStyle,\r\n    startAnchor: \"auto\",\r\n    endAnchor: \"auto\",\r\n    color: budgetDifference > 0 ? \"#2ba874\" : \"#e2725d\",\r\n  };\r\n  const budgetDiffToSalaryDiffStyle = {\r\n    ...arrowStyle,\r\n    startAnchor: \"auto\",\r\n    endAnchor: \"auto\",\r\n    color: salaryDifference > 0 ? \"#2ba874\" : \"#e2725d\",\r\n  };\r\n\r\n  return (\r\n    <StyledItem>\r\n      <div className=\"header\">\r\n        <p className=\"month\">{title}</p>\r\n        <div className=\"toggle\">\r\n          {toggleMandatory ? (\r\n            <FaChevronDown\r\n              className=\"icon\"\r\n              onClick={() => setToggleMandatory(!toggleMandatory)}\r\n            />\r\n          ) : (\r\n            <FaChevronUp\r\n              className=\"icon\"\r\n              onClick={() => setToggleMandatory(!toggleMandatory)}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"monthlyAllocated\">\r\n        <Xarrow\r\n          start={`${uniqueid} + salary`}\r\n          end={`${uniqueid} + budget`}\r\n          {...salToBudgetStyle}\r\n        />\r\n        <Xarrow\r\n          start={`${uniqueid} + budget`}\r\n          end={`${uniqueid} + spent`}\r\n          {...budgetToSpentStyle}\r\n        />\r\n        <Xarrow\r\n          start={`${uniqueid} + spent`}\r\n          end={`${uniqueid} + budDiff`}\r\n          {...spentToBudgetDiffStyle}\r\n        />\r\n        <Xarrow\r\n          start={`${uniqueid} + budDiff`}\r\n          end={`${uniqueid} + salDiff`}\r\n          {...budgetDiffToSalaryDiffStyle}\r\n        />\r\n        <div className=\"data\">\r\n          {actualSalaryForMonth > 0 &&\r\n          actualBudgetForMonth < actualSalaryForMonth &&\r\n          budgetDifference > 0 &&\r\n          salaryDifference > 0 ? (\r\n            <FaGrin className=\"icon happy\" />\r\n          ) : (\r\n            <FaFrown className=\"icon sad\" />\r\n          )}\r\n\r\n          <div className=\"featureNumber\" id={`${uniqueid} + salary`}>\r\n            <h5>(Net) salary</h5>\r\n            <div className=\"item\">\r\n              <span className=\"symbol\">{currencySymbol} </span>\r\n              <span\r\n                className={actualSalaryForMonth > 0 ? \"positive\" : \"negative\"}\r\n              >\r\n                {formatNumber(actualSalaryForMonth)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"featureNumber\" id={`${uniqueid} + budget`}>\r\n            <h5>Budgeted amount</h5>\r\n            <div className=\"item\">\r\n              <span className=\"symbol\">{currencySymbol} </span>\r\n              <span\r\n                className={\r\n                  actualBudgetForMonth < actualSalaryForMonth\r\n                    ? \"positive\"\r\n                    : \"negative\"\r\n                }\r\n              >\r\n                {formatNumber(actualBudgetForMonth)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"featureNumber\" id={`${uniqueid} + spent`}>\r\n            <h5>Spent</h5>\r\n            <div className=\"item\">\r\n              <span className=\"symbol\">{currencySymbol} </span>\r\n              <span className=\"spent\">{formatNumber(spentAmount)}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"featureNumber\" id={`${uniqueid} + budDiff`}>\r\n            <h5>Budget difference</h5>\r\n            <div className=\"item\">\r\n              <span className=\"symbol\">{currencySymbol} </span>\r\n              <span className={budgetDifference > 0 ? \"positive\" : \"negative\"}>\r\n                {formatNumber(budgetDifference)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"featureNumber\" id={`${uniqueid} + salDiff`}>\r\n            <h5>Salary difference</h5>\r\n            <div className=\"item\">\r\n              <span className=\"symbol\">{currencySymbol} </span>\r\n              <span className={salaryDifference > 0 ? \"positive\" : \"negative\"}>\r\n                {formatNumber(salaryDifference)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table\">\r\n        {toggleMandatory ? (\r\n          <div className=\"joined-table\">\r\n            <h4>Budget vs Transactions by category</h4>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <h5>In budget?</h5>\r\n                  </th>\r\n                  <th>\r\n                    <h5>Budget Category</h5>\r\n                  </th>\r\n                  <th>\r\n                    <h5>Budget Amount</h5>\r\n                  </th>\r\n                  {/* <th>\r\n                    <h5>Transaction Category</h5>\r\n                  </th> */}\r\n                  <th>\r\n                    <h5>Transaction Amount</h5>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {joinedTables\r\n                  .sort((a, b) => (a.category > b.category ? 1 : -1))\r\n                  .map((item) => (\r\n                    <TrackerBudgetItem key={uuidv4()} budgetItem={item} />\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div className=\"line\"></div>\r\n    </StyledItem>\r\n  );\r\n};\r\n\r\nconst StyledItem = styled(motion.div)`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: space-between;\r\n  margin-bottom: 0.25rem;\r\n\r\n  .header,\r\n  .monthlyAllocated {\r\n    margin: 0.25rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .month {\r\n      color: white;\r\n    }\r\n    .symbol {\r\n      margin-right: 0.25rem;\r\n    }\r\n    .data {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-around;\r\n      .icon {\r\n        height: 30px;\r\n        width: 30px;\r\n      }\r\n      .happy {\r\n        color: #2ba874;\r\n      }\r\n      .sad {\r\n        color: #e2725d;\r\n      }\r\n    }\r\n    .featureNumber {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #303030;\r\n      padding: 0.5rem;\r\n      border-radius: 4px;\r\n      min-width: 10%;\r\n      //font-size: 14pt;\r\n      font-weight: 700;\r\n      h5 {\r\n        margin-bottom: 0.5rem;\r\n      }\r\n    }\r\n    .spent {\r\n      color: #e69a07;\r\n    }\r\n  }\r\n  .toggle {\r\n    padding: 0.25rem;\r\n    background-color: #303030;\r\n    color: #848586;\r\n    border-radius: 4px;\r\n  }\r\n  .table {\r\n    background-color: #39393c;\r\n  }\r\n  p {\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nexport default TableExpandingHeader;\r\n// import { useContext, useState } from \"react\";\r\n// import moment from \"moment\";\r\n// //styling\r\n// import styled from \"styled-components\";\r\n// import { motion } from \"framer-motion\";\r\n// //context\r\n// import { GlobalContext } from \"../../context/GlobalContext\";\r\n// //util\r\n// import {\r\n//   sortByCategoryThenByItem,\r\n//   getYearlyAllocatedPerDay,\r\n//   filterTransactionsByDateRange,\r\n//   filterTransactionsByDateRangeAndReturnTotal,\r\n//   formatNumber,\r\n// } from \"../../util\";\r\n// //arrows\r\n// import Xarrow from \"react-xarrows\";\r\n// //icons\r\n// import { FaChevronUp, FaChevronDown } from \"react-icons/fa\";\r\n// //FaGrin, FaFrown,\r\n// //components\r\n// import TrackerBudgetItem from \"./TrackerBudgetItem\";\r\n// //unique id\r\n// //import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// const TableExpandingHeader = ({ title, uniqueid }) => {\r\n//   const { currentBudget, currencySymbol } = useContext(GlobalContext);\r\n//   const budgetItems = currentBudget.data.budgetItems;\r\n//   const [toggleMandatory, setToggleMandatory] = useState(false);\r\n//   const daysInMonth = moment(title, \"MMMM\").daysInMonth();\r\n\r\n//   const actualBudgetPerMonth =\r\n//     getYearlyAllocatedPerDay(budgetItems) * daysInMonth;\r\n\r\n//   const transactions = currentBudget.data.transactions;\r\n\r\n//   const { yearlyNet } = currentBudget.data.income;\r\n//   const actualSalaryForMonth = (yearlyNet / 365) * daysInMonth;\r\n\r\n//   const range = {\r\n//     from: moment(title, \"MMMM\").startOf(\"month\"),\r\n//     to: moment(title, \"MMMM\").endOf(\"month\"),\r\n//   };\r\n\r\n//   //\r\n//   const monthlyTransactions = filterTransactionsByDateRange(\r\n//     transactions,\r\n//     range\r\n//   );\r\n//   console.log(monthlyTransactions);\r\n//   //calculate amount spent for supplied mmonth\r\n//   const spentAmount = filterTransactionsByDateRangeAndReturnTotal(\r\n//     transactions,\r\n//     range\r\n//   );\r\n//   //console.log(spentAmount);\r\n//   const salaryDifference = actualSalaryForMonth - spentAmount;\r\n//   const budgetDifference = actualBudgetPerMonth - spentAmount;\r\n\r\n//   //ARROWS\r\n//   const arrowStyle = {\r\n//     curveness: Number(0.6),\r\n//     strokeWidth: Number(2),\r\n//     dashness: false,\r\n//     path: \"smooth\",\r\n//   };\r\n//   const salArrowStyle = {\r\n//     ...arrowStyle,\r\n//     startAnchor: \"auto\",\r\n//     endAnchor: { position: \"auto\", offset: { bottomness: -15 } },\r\n//     color: salaryDifference < 0 ? \"#e2725d\" : \"#2ba874\",\r\n//   };\r\n//   const budgetArrowStyle = {\r\n//     ...arrowStyle,\r\n//     startAnchor: \"auto\",\r\n//     endAnchor: { position: \"auto\", offset: { bottomness: 15 } },\r\n//     color: budgetDifference < 0 ? \"#e2725d\" : \"#2ba874\",\r\n//   };\r\n//   const salDiffArrowStyle = {\r\n//     ...arrowStyle,\r\n//     startAnchor: { position: \"auto\", offset: { bottomness: -15 } },\r\n//     endAnchor: \"auto\",\r\n//     color: salaryDifference < 0 ? \"#e2725d\" : \"#2ba874\",\r\n//   };\r\n//   const budgetDiffArrowStyle = {\r\n//     ...arrowStyle,\r\n//     startAnchor: { position: \"auto\", offset: { bottomness: 15 } },\r\n//     endAnchor: \"auto\",\r\n//     color: budgetDifference < 0 ? \"#e2725d\" : \"#2ba874\",\r\n//   };\r\n\r\n//   return (\r\n//     <StyledItem>\r\n//       <div className=\"header\">\r\n//         <p className=\"month\">{title}</p>\r\n//         <div className=\"toggle\">\r\n//           {toggleMandatory ? (\r\n//             <FaChevronDown\r\n//               className=\"icon\"\r\n//               onClick={() => setToggleMandatory(!toggleMandatory)}\r\n//             />\r\n//           ) : (\r\n//             <FaChevronUp\r\n//               className=\"icon\"\r\n//               onClick={() => setToggleMandatory(!toggleMandatory)}\r\n//             />\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"monthlyAllocated\">\r\n//         <Xarrow\r\n//           start={`${uniqueid} + salary`}\r\n//           end={`${uniqueid} + spent`}\r\n//           {...salArrowStyle}\r\n//         />\r\n//         <Xarrow\r\n//           start={`${uniqueid} + budget`}\r\n//           end={`${uniqueid} + spent`}\r\n//           {...budgetArrowStyle}\r\n//         />\r\n//         <Xarrow\r\n//           start={`${uniqueid} + spent`}\r\n//           end={`${uniqueid} + salDiff`}\r\n//           {...salDiffArrowStyle}\r\n//         />\r\n//         <Xarrow\r\n//           start={`${uniqueid} + spent`}\r\n//           end={`${uniqueid} + budDiff`}\r\n//           {...budgetDiffArrowStyle}\r\n//         />\r\n\r\n//         <div className=\"data\">\r\n//           <div className=\"left\">\r\n//             <div className=\"featureNumber\" id={`${uniqueid} + salary`}>\r\n//               <h5>(Net) salary</h5>\r\n//               <div className=\"item\">\r\n//                 <span className=\"symbol\">{currencySymbol} </span>\r\n//                 <span\r\n//                   className={actualSalaryForMonth < 0 ? \"negative\" : \"positive\"}\r\n//                 >\r\n//                   {formatNumber(actualSalaryForMonth)}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"featureNumber\" id={`${uniqueid} + budget`}>\r\n//               <h5>Budgeted amount</h5>\r\n//               <div className=\"item\">\r\n//                 <span className=\"symbol\">{currencySymbol} </span>\r\n//                 <span\r\n//                   className={actualBudgetPerMonth < 0 ? \"negative\" : \"positive\"}\r\n//                 >\r\n//                   {formatNumber(actualBudgetPerMonth)}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"middle\">\r\n//             <div className=\"featureNumber\" id={`${uniqueid} + spent`}>\r\n//               <h5>Spent</h5>\r\n//               <div className=\"item\">\r\n//                 <span className=\"symbol\">{currencySymbol} </span>\r\n//                 <span className=\"spent\">{formatNumber(spentAmount)}</span>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"right\">\r\n//             <div className=\"featureNumber\" id={`${uniqueid} + salDiff`}>\r\n//               <h5>Salary difference</h5>\r\n//               <div className=\"item\">\r\n//                 <span className=\"symbol\">{currencySymbol} </span>\r\n//                 <span\r\n//                   className={salaryDifference < 0 ? \"negative\" : \"positive\"}\r\n//                 >\r\n//                   {formatNumber(salaryDifference)}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"featureNumber\" id={`${uniqueid} + budDiff`}>\r\n//               <h5>Budget difference</h5>\r\n//               <div className=\"item\">\r\n//                 <span className=\"symbol\">{currencySymbol} </span>\r\n//                 <span\r\n//                   className={budgetDifference < 0 ? \"negative\" : \"positive\"}\r\n//                 >\r\n//                   {formatNumber(budgetDifference)}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"table\">\r\n//         {toggleMandatory ? (\r\n//           <>\r\n//             <table>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>\r\n//                     <h5>Category</h5>\r\n//                   </th>\r\n//                   <th>\r\n//                     <h5>% of allocated</h5>\r\n//                   </th>\r\n//                   <th>\r\n//                     <h5>% of total</h5>\r\n//                   </th>\r\n//                   <th>\r\n//                     <h5>Category sub-total</h5>\r\n//                   </th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {sortByCategoryThenByItem(monthlyTransactions).map((item) => (\r\n//                   <TrackerBudgetItem key={item.id} budgetItem={item} />\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </>\r\n//         ) : (\r\n//           \"\"\r\n//         )}\r\n//       </div>\r\n//       <div className=\"line\"></div>\r\n//     </StyledItem>\r\n//   );\r\n// };\r\n\r\n// const StyledItem = styled(motion.div)`\r\n//   width: 100%;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: center;\r\n//   align-items: space-between;\r\n//   margin-bottom: 0.25rem;\r\n//   .header,\r\n//   .monthlyAllocated {\r\n//     margin: 0.25rem;\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n//     align-items: center;\r\n//     .month {\r\n//       color: white;\r\n//     }\r\n//     .symbol {\r\n//       margin-right: 0.25rem;\r\n//     }\r\n//     .data {\r\n//       min-width: 100%;\r\n\r\n//       display: flex;\r\n//       align-items: center;\r\n//       justify-content: space-between;\r\n//       .middle,\r\n//       .left,\r\n//       .right {\r\n//         width: 100%;\r\n//         display: flex;\r\n//         align-items: center;\r\n//         flex-direction: column;\r\n//         justify-content: space-around;\r\n//         gap: 1rem;\r\n//       }\r\n//     }\r\n//     .featureNumber {\r\n//       display: flex;\r\n//       flex-direction: column;\r\n//       justify-content: center;\r\n//       align-items: center;\r\n//       background-color: #303030;\r\n//       padding: 0.5rem;\r\n//       border-radius: 4px;\r\n//       min-width: 40%;\r\n//       //font-size: 14pt;\r\n//       font-weight: 700;\r\n//       h5 {\r\n//         margin-bottom: 0.5rem;\r\n//       }\r\n//     }\r\n//     .spent {\r\n//       color: #e69a07;\r\n//     }\r\n//   }\r\n//   .toggle {\r\n//     padding: 0.25rem;\r\n//     background-color: #303030;\r\n//     color: #848586;\r\n//     border-radius: 4px;\r\n//   }\r\n//   .table {\r\n//     background-color: #39393c;\r\n//   }\r\n//   p {\r\n//     text-align: center;\r\n//     text-transform: capitalize;\r\n//   }\r\n// `;\r\n\r\n// export default TableExpandingHeader;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Settings.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Sidebar.js",["278"],"//import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//import { GlobalContext } from \"../context/GlobalContext\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { GiPayMoney } from \"react-icons/gi\";\r\nimport { FaWallet, FaRegMoneyBillAlt } from \"react-icons/fa\";\r\nimport { BiAbacus } from \"react-icons/bi\";\r\n//FaChartBar\r\n\r\nconst Sidebar = ({ id }) => {\r\n  //const { currentBudget } = useContext(GlobalContext);\r\n  //const id = currentBudget.id;\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[3];\r\n  //console.log({ path });\r\n  return (\r\n    <StyledSide>\r\n      <ul>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: `/settings/${id}/income`,\r\n            }}\r\n          >\r\n            <FaRegMoneyBillAlt\r\n              className={path === \"income\" ? \"navIconSelected\" : \"navIcon\"}\r\n            />\r\n            <p className={path === \"income\" ? \"selected\" : \"\"}>Income</p>\r\n          </Link>\r\n          <Line\r\n            transition={{ duration: 0.75 }}\r\n            initial={{ width: \"0%\" }}\r\n            animate={{ width: path === \"income\" ? \"70%\" : \"0%\" }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: `/settings/${id}/budget`,\r\n            }}\r\n          >\r\n            <FaWallet\r\n              className={path === \"budget\" ? \"navIconSelected\" : \"navIcon\"}\r\n            />\r\n            <p className={path === \"budget\" ? \"selected\" : \"\"}>Budget</p>\r\n          </Link>\r\n          <Line\r\n            transition={{ duration: 0.75 }}\r\n            initial={{ width: \"0%\" }}\r\n            animate={{ width: path === \"budget\" ? \"70%\" : \"0%\" }}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: `/settings/${id}/expenditure`,\r\n            }}\r\n          >\r\n            <GiPayMoney\r\n              className={path === \"expenditure\" ? \"navIconSelected\" : \"navIcon\"}\r\n            />\r\n            <p className={path === \"expenditure\" ? \"selected\" : \"\"}>\r\n              Expenditure\r\n            </p>\r\n          </Link>\r\n          <Line\r\n            transition={{ duration: 0.75 }}\r\n            initial={{ width: \"0%\" }}\r\n            animate={{ width: path === \"expenditure\" ? \"70%\" : \"0%\" }}\r\n          />\r\n        </li>\r\n        {/* <li>\r\n          <Link\r\n            to={{\r\n              pathname: `/settings/${id}/tracker`,\r\n            }}\r\n          >\r\n            <BiAbacus\r\n              className={path === \"tracker\" ? \"navIconSelected\" : \"navIcon\"}\r\n            />\r\n            <p className={path === \"tracker\" ? \"selected\" : \"\"}>Tracker</p>\r\n          </Link>\r\n          <Line\r\n            transition={{ duration: 0.75 }}\r\n            initial={{ width: \"0%\" }}\r\n            animate={{ width: path === \"tracker\" ? \"70%\" : \"0%\" }}\r\n          />\r\n        </li> */}\r\n      </ul>\r\n    </StyledSide>\r\n  );\r\n};\r\n\r\nconst StyledSide = styled(motion.div)`\r\n  width: 15vw;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n  padding: 1rem;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    list-style: none;\r\n    text-decoration: none;\r\n    li {\r\n      margin-right: 1rem;\r\n      text-decoration: none;\r\n      position: relative;\r\n      a {\r\n        display: flex;\r\n        align-items: center;\r\n        color: #848586;\r\n        text-decoration: none;\r\n        font-weight: bolder;\r\n        padding: 0.5rem 0;\r\n        font-size: 12pt;\r\n        font-variant-caps: all-small-caps;\r\n      }\r\n\r\n      .selected {\r\n        color: white;\r\n      }\r\n      .navIcon {\r\n        margin-right: 0.5rem;\r\n        color: #848586;\r\n        min-height: 25px;\r\n        min-width: 25px;\r\n      }\r\n      .navIconSelected {\r\n        margin-right: 0.5rem;\r\n        color: white;\r\n        height: 25px;\r\n        width: 25px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Line = styled(motion.div)`\r\n  z-index: 99;\r\n  height: 0.15rem;\r\n  //background: #00b4ee;\r\n  background: #e69a07;\r\n  //width: 100%;\r\n  position: absolute;\r\n  bottom: -1%;\r\n`;\r\n\r\nexport default Sidebar;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\UncategorizedBudget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\CategorizedBudget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryForm.jsx",["279","280","281"],"import { useState, useContext } from \"react\";\r\n//style\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport {FaChevronDown, FaChevronUp} from \"react-icons/fa\"\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { updateBudgetLocally } from \"../../utilities\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//UUID inique ID generator\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { formatStrings, divideValues, multiplyValues } from \"../../utilities\";\r\n\r\nconst AddBudgetCategoryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    category: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [showForm, toggleShowForm] = useState(false);\r\n\r\n  const {\r\n    updateBudget,\r\n    budgets,\r\n    currentBudget,\r\n    updateCurrentBudget,\r\n    currencySymbol,\r\n  } = useContext(GlobalContext);\r\n\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"ADDED\":\r\n        toast.dark(\"Budget Category Added\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.warn(\r\n          \"Please enter a name and description longer than 5 characters\",\r\n          { color: \"black\" }\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  const handleValidation = (formData) => {\r\n    let valid = true;\r\n    //console.log(formData.name.length);\r\n    // if (formData.name.length < 5 || formData.description.length < 5) {\r\n    //   valid = false;\r\n    // }\r\n    return valid;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    //console.log(`${e.target.name}: ${e.target.value}`);\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    //check if component mounted\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: Number(e.target.value).toFixed(2)\r\n      //[e.target.name]: Number(e.target.value).toFixed(2),\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (handleValidation(formData)) {\r\n      \r\n      const newBudgetCategory = {\r\n        id: uuidv4(),\r\n        category: formData.category.toLowerCase() || \"Category\",\r\n        amount: Number(formData.amount) * 100,\r\n        items: []\r\n      };\r\n\r\n      const updatedBudget = {\r\n        ...currentBudget,\r\n        data: {\r\n          ...currentBudget.data,\r\n          budgetCategories: [...currentBudget.data.budgetCategories, newBudgetCategory],\r\n        },\r\n      }\r\n\r\n      //add budget to app context\r\n      updateBudget(updatedBudget);\r\n\r\n      //save budget to local storage\r\n      updateBudgetLocally(budgets, updatedBudget);\r\n\r\n      //update current budget\r\n      updateCurrentBudget(updatedBudget);\r\n\r\n      //reset form\r\n      setFormData({\r\n        category: \"\",\r\n        amount: \"\",\r\n      });\r\n      notify(\"ADDED\");\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledAddBudgetCategoryForm showForm={showForm}>\r\n      <ToastContainer\r\n        closeButton={false}\r\n        transition={Zoom}\r\n        position=\"bottom-center\"\r\n        draggable={false}\r\n        pauseOnHover\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n      />\r\n\r\n      {showForm ? (\r\n        <>\r\n          <div className=\"show-header\">\r\n            <FaChevronDown\r\n            className=\"icon toggle-icon\"\r\n            onClick={() => toggleShowForm(!showForm)}\r\n            />\r\n            <h4>New Budget Category</h4>\r\n          </div>\r\n          \r\n          <form>\r\n            <label>Category:</label>\r\n            <input\r\n              className=\"active-input\"\r\n              name=\"category\"\r\n              type=\"text\"\r\n              value={formData.category}\r\n              onChange={handleChange}\r\n              placeholder=\"Category...\"\r\n            />\r\n            \r\n            <label>Allocation:</label>\r\n            <div className=\"currency-input\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"active-input\"\r\n                name=\"amount\"\r\n                type=\"text\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"0.00\"\r\n              />\r\n            </div>\r\n            <button className=\"button\" onClick={onSubmit} id=\"addBudgetButton\">\r\n              Add Category\r\n            </button>\r\n          </form>\r\n            </>\r\n      ) : (\r\n          <div className=\"show-header\">\r\n            <FaChevronUp\r\n            className=\"icon toggle-icon\"\r\n            onClick={() => toggleShowForm(!showForm)}\r\n            />\r\n            <h4>New Budget Category</h4>\r\n          </div>\r\n          \r\n      )}\r\n      \r\n    </StyledAddBudgetCategoryForm>\r\n  );\r\n};\r\n\r\nconst StyledAddBudgetCategoryForm = styled(motion.div)`\r\n  padding: ${({showForm}) => (showForm ? \"1rem\": \"0.25rem\")};\r\n  display: ${({ showForm }) => (showForm ? \"flex\" : \"none\")};\r\n  border-radius: 4px;\r\n  background-color: ${({showForm}) => (showForm ? \"#39393c\": \"transparent\")};\r\n  color: #848586;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 4rem;\r\n  align-items: ${({showForm}) => (showForm ? \"flex-start\": \"flex-start\")};\r\n  justify-content: center;\r\n  position: relative;\r\n  transition: 0.3s ease-in all;\r\n\r\n  .show-header{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    column-gap: 1rem;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n  }\r\n  \r\n  .toggle-icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    aspect-ratio: 1;\r\n    background-color: #39393c;\r\n    color: #848586;\r\n    border: 2px solid #00b4ee;\r\n    border-radius: 50%;\r\n    padding: 0.25rem;\r\n  }\r\n\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    //margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    //font-size: 10pt;\r\n    width: 100%;\r\n  }\r\n  label {\r\n    margin-right: 0.25rem;\r\n  }\r\n  input{\r\n    padding: 0.25rem;\r\n    //outline: none;\r\n    //margin-right: 1rem;\r\n  }\r\n  .currency-input{\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport default AddBudgetCategoryForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Progressbar.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetCategoryItemForm.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Summary.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Income.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budgets.jsx",["282"],"import { useContext, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//context\r\nimport { GlobalContext } from \"../context/GlobalContext\";\r\nimport AddBudgetForm from \"../components/budget/AddBudgetForm\";\r\nimport BudgetList from \"../components/budget/BudgetList\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { seedData } from \"../seedData\";\r\n\r\nconst Budgets = () => {\r\n\r\n  const { loadBudgets } = useContext(GlobalContext);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const data = seedData();\r\n  //setData\r\n  //data.setData()\r\n  //console.log(data)\r\n  \r\n  //get seed data\r\n  useEffect(() => {\r\n    data.getLocalData().then(\r\n      (response) => {\r\n        //save returned data to global context\r\n        loadBudgets(response);\r\n        //set loading flag to false\r\n        setLoading(false);\r\n      },\r\n      (reject) => {\r\n        //on reject log error\r\n        console.log(reject);\r\n        //set loading flag to false\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <StyledBudgetContainer>\r\n        <h3>Budgets</h3>\r\n      <div className=\"main\">\r\n        {!isLoading ? (\r\n          <>\r\n            <AddBudgetForm />\r\n            <BudgetList />\r\n          </>\r\n        ) : (\r\n            <Spinner />\r\n        )}\r\n      </div>\r\n    </StyledBudgetContainer>\r\n  );\r\n};\r\n\r\nconst StyledBudgetContainer = styled(motion.div)`\r\n  padding-top: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  h3{\r\n    align-self: flex-start;\r\n    padding-left: 15vw;\r\n  }\r\n  \r\n  .main {\r\n    width: 70vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    row-gap: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport default Budgets;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budget.jsx",["283"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\utilities.js",["284"],"import Allocated from \"./components/dashboard/widgets/AllocatedWidget\";\r\nimport BudgetByCategoryWidget from \"./components/dashboard/widgets/BudgetByCategoryWidget\";\r\nimport BudgetByItemWidget from \"./components/dashboard/widgets/BudgetByItemWidget\";\r\nimport Salary from \"./components/dashboard/widgets/SalaryWidget\";\r\nimport ExpenditureWidget from \"./components/dashboard/widgets/ExpenditureWidget\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport AnnualOverviewWidget from \"./components/dashboard/widgets/AnnualOverviewWidget\";\r\n\r\nexport const divideValues = (o) => {  \r\n    let newobj = {}\r\n    for (const key in o) {\r\n      newobj = { ...newobj, [key]: o[key] / 100 }\r\n    }\r\n    return newobj\r\n  }\r\n  \r\n  export const multiplyValues = (o) => {  \r\n    let newobj = {}\r\n    for (const key in o) {\r\n      newobj = { ...newobj, [key]: o[key] * 100 }\r\n    }\r\n    return newobj\r\n  }\r\n\r\n  export const convertToNumbers = (o) => {  \r\n    let newobj = {}\r\n    for (const key in o) {\r\n      newobj = { ...newobj, [key]: Number(o[key]) }\r\n    }\r\n    return newobj\r\n  }\r\n  \r\n  export const formatStrings = (o) => {  \r\n    let newobj = {}\r\n    for (const key in o) {\r\n      newobj = { ...newobj, [key]: Number(o[key]).toFixed(2) }\r\n    }\r\n    return newobj\r\n  }\r\n\r\n//returns an array of budget subtotals per category\r\nexport const getAccumulatedSubTotals = (currentBudget) => {\r\n  return currentBudget.data.budgetItems.reduce(\r\n    (acc, obj, currentIndex, array) => {\r\n      let found = false;\r\n      let pointer = 0;\r\n\r\n      for (let i = 0; i < acc.length; i++) {\r\n        if (acc[i].category === array[currentIndex].category) {\r\n          pointer = i;\r\n          found = true;\r\n        }\r\n      }\r\n      if (!found) {\r\n        let yearlyAmount = 0;\r\n        switch (array[currentIndex].frequency) {\r\n          case \"daily\":\r\n            yearlyAmount = Number(array[currentIndex].amount * 365);\r\n            break;\r\n          case \"weekly\":\r\n            yearlyAmount = Number(array[currentIndex].amount * 52);\r\n            break;\r\n          case \"monthly\":\r\n            yearlyAmount = Number(array[currentIndex].amount * 12);\r\n            break;\r\n          case \"annually\":\r\n            yearlyAmount = Number(array[currentIndex].amount);\r\n            break;\r\n          default:\r\n            yearlyAmount = Number(array[currentIndex].amount * 12);\r\n        }\r\n        acc.push({\r\n          category: array[currentIndex].category,\r\n          amount: yearlyAmount,\r\n        });\r\n      } else {\r\n        acc[pointer] = {\r\n          ...acc[pointer],\r\n          amount: acc[pointer].amount + array[currentIndex].amount,\r\n        };\r\n      }\r\n      return acc;\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const getNetIncomeForPeriod = (currentBudget, period) => {\r\n  switch (period) {\r\n    case \"daily\":\r\n      return currentBudget.data.income.weeklyNet / 7;\r\n    case \"weekly\":\r\n      return currentBudget.data.income.weeklyNet;\r\n    case \"monthly\":\r\n      return currentBudget.data.income.monthlyNet;\r\n    case \"annually\":\r\n      return currentBudget.data.income.yearlyNet;\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nexport const getAllocatedPerPeriod = (currentBudget, period) => {\r\n  switch (period) {\r\n    case \"daily\":\r\n      return Number(getYearlyAllocated(currentBudget.data.budgetItems) / 365);\r\n    case \"weekly\":\r\n      return Number(getYearlyAllocated(currentBudget.data.budgetItems) / 52);\r\n    case \"monthly\":\r\n      return Number(getYearlyAllocated(currentBudget.data.budgetItems) / 12);\r\n    case \"annually\":\r\n      return Number(getYearlyAllocated(currentBudget.data.budgetItems));\r\n\r\n    default:\r\n      return Number(0);\r\n  }\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n  let formattedWholeNumber = null;\r\n  let formattedDecimalNumber = null;\r\n  if (number > 0) {\r\n    formattedWholeNumber = Math.floor(Number(number).toFixed(2));\r\n    formattedDecimalNumber = (Number(number) % 1).toFixed(2).substring(1);\r\n  } else {\r\n    formattedWholeNumber = Number(number).toFixed(2);\r\n    formattedDecimalNumber = \"\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span className=\"whole\">{formattedWholeNumber}</span>\r\n      <span className=\"decimal\">{formattedDecimalNumber}</span>\r\n    </>\r\n  );\r\n};\r\n\r\n// export const saveBudgetLocally = (newBudget) => {\r\n//   window.localStorage.setItem(\r\n//     \"EXPENSE-APP\",\r\n//     JSON.stringify(newBudget)\r\n//   );\r\n// };\r\n\r\nexport const saveBudgetLocally = (budgets, newBudget) => {\r\n  window.localStorage.setItem(\r\n    \"EXPENSE-APP\",\r\n    JSON.stringify([...budgets, newBudget])\r\n  );\r\n};\r\n\r\nexport const updateBudgetLocally = (budgets, updateBudget) => {\r\n  const subSet = budgets.filter((b) => b.id !== updateBudget.id);\r\n  window.localStorage.setItem(\r\n    \"EXPENSE-APP\",\r\n    JSON.stringify([...subSet, updateBudget])\r\n  );\r\n};\r\n\r\n// export const updateBudgetLocally = (updateBudget) => {\r\n//   //const subSet = budgets.filter((b) => b.id !== updateBudget.id);\r\n//   window.localStorage.setItem(\r\n//     \"EXPENSE-APP\",\r\n//     JSON.stringify(updateBudget)\r\n//   );\r\n// };\r\n\r\nexport const deleteBudgetLocally = (budgets, id) => {\r\n  const newBudgets = budgets.filter((b) => b.id !== id);\r\n  window.localStorage.setItem(\"EXPENSE-APP\", JSON.stringify([...newBudgets]));\r\n};\r\n\r\nexport const getWidget = (name) => {\r\n  switch (name) {\r\n    //INCOME\r\n    case \"Budget allocated / remaining\":\r\n      return <Allocated key=\"allocated\" />;\r\n    case \"Salary gross and net breakdown\":\r\n      return <Salary key={uuidv4()} />;\r\n    //BUDGET\r\n    case \"Budget breakdown by category\":\r\n      return <BudgetByCategoryWidget key={uuidv4()} />;\r\n    case \"Budget breakdown by item\":\r\n      return <BudgetByItemWidget key={uuidv4()} />;\r\n    case \"Expenditure\":\r\n      return <ExpenditureWidget key={uuidv4()} />;\r\n    case \"Tracker\":\r\n      return <AnnualOverviewWidget key={uuidv4()} />;\r\n\r\n    default:\r\n      return <Salary key={uuidv4()} />;\r\n  }\r\n};\r\n\r\n//returns an total figure of all budgets items for the year\r\n//eg:  $1 per week = $52\r\n//    $1 per month = $12\r\n//    yearly total = $64\r\nexport const getYearlyAllocated = (budgetItems) => {\r\n  return budgetItems\r\n    .map((item) => {\r\n      if (!item.paid) {\r\n        if (item.frequency === \"daily\") {\r\n          return item.amount * 365;\r\n        }\r\n        if (item.frequency === \"weekly\") {\r\n          return item.amount * 52;\r\n        }\r\n        if (item.frequency === \"monthly\") {\r\n          return item.amount * 12;\r\n        }\r\n        if (item.frequency === \"annually\") {\r\n          return item.amount;\r\n        }\r\n      }\r\n      return 0;\r\n    })\r\n    .reduce((acc, current) => Number(acc) + Number(current), []);\r\n};\r\n\r\n//returns an total figure of all budgets items for the year averaged to a daily figure\r\nexport const getYearlyAllocatedPerDay = (budgetItems) => {\r\n  return (\r\n    budgetItems\r\n      .map((item) => {\r\n        if (!item.paid) {\r\n          if (item.frequency === \"daily\") {\r\n            return item.amount * 365;\r\n          }\r\n          if (item.frequency === \"weekly\") {\r\n            return item.amount * 52;\r\n          }\r\n          if (item.frequency === \"monthly\") {\r\n            return item.amount * 12;\r\n          }\r\n          if (item.frequency === \"annually\") {\r\n            return item.amount;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      .reduce((acc, current) => Number(acc) + Number(current), []) / 365\r\n  );\r\n};\r\n\r\n// custom sort function to sort by category\r\n// then by item inside that category\r\n// builds new array with sorted results\r\n// Quite proud of this!\r\nexport const sortByCategoryThenByItem = (arr) => {\r\n  let arrSortedByItem = [];\r\n\r\n  //ceate set of unique category names\r\n  let uniqueSet = new Set();\r\n  arr?.map((item) => uniqueSet.add(item.category));\r\n\r\n  uniqueSet.forEach((category) => {\r\n    arrSortedByItem.push(\r\n      ...arr\r\n        .sort((a, b) => (a.category > b.category ? 1 : -1))\r\n        .filter((item) => item.category === category)\r\n        .sort((a, b) => (a.item > b.item ? 1 : -1))\r\n    );\r\n  });\r\n\r\n  return arrSortedByItem;\r\n};\r\n\r\n// export const sortByCategoryThenByItem = (arr) => {\r\n//   let uniqueSet = new Set();\r\n//   let sortedByCat = [];\r\n//   let sortedByItem = [];\r\n//   sortedByCat = arr.sort((a, b) => (a.category > b.category ? 1 : -1));\r\n//   arr.map((item) => uniqueSet.add(item.category));\r\n//   uniqueSet.forEach((category) => {\r\n//     sortedByItem.push(\r\n//       ...sortedByCat\r\n//         .filter((item) => item.category === category)\r\n//         .sort((a, b) => (a.item > b.item ? 1 : -1))\r\n//     );\r\n//   });\r\n//   return sortedByItem;\r\n// };\r\n\r\nexport const getToday = () => {\r\n  const date = new Date(Date.now());\r\n  let day = date.getDate();\r\n  let month = date.getMonth() + 1;\r\n  let year = date.getFullYear();\r\n  if (month < 10) month = `0${month}`;\r\n  return year + \"-\" + month + \"-\" + day;\r\n};\r\n\r\n// export const getTodayDDMMYYY = () => {\r\n//   const date = new Date(Date.now());\r\n//   let day = date.getDate();\r\n//   let month = date.getMonth() + 1;\r\n//   let year = date.getFullYear();\r\n//   if (month < 10) month = `0${month}`;\r\n//   return day + \"-\" + month + \"-\" + year;\r\n// };\r\n\r\n//isBetween is exclusive by default, so to make inclusive of shown date\r\n//so subtract  by 1 day from 'from'\r\n//add 1 day to 'to'\r\nexport const filterTransactionsByDateRange = (transactions, range) => {\r\n  return transactions.filter((transaction) => {\r\n    return moment(transaction.date).isBetween(\r\n      moment(range.from).subtract(1, \"M\"),\r\n      moment(range.to).add(1, \"M\"),\r\n      \"month\"\r\n    );\r\n  }, []);\r\n};\r\n\r\nexport const filterTransactionsByDateRangeAndReturnTotal = (\r\n  transactions,\r\n  range\r\n) => {\r\n  return transactions\r\n    .filter((transaction) => {\r\n      if (\r\n        moment(transaction.date).isBetween(\r\n          moment(range.from).subtract(1, \"M\"),\r\n          moment(range.to).add(1, \"M\"),\r\n          \"month\"\r\n        )\r\n      ) {\r\n        return transaction;\r\n      }\r\n    }, [])\r\n    .map((transaction) => transaction.amount)\r\n    .reduce((acc, current) => Number(acc) + Number(current), []);\r\n};\r\n\r\n// //getAllocatedFilteredByMonth\r\n// export const getAllocatedFilteredByMonth = (transactions, month) => {\r\n//   return transactions.filter((transaction) => {\r\n//     return moment(transaction.date).isBetween(\r\n//       moment(range.from).subtract(1, \"d\"),\r\n//       moment(range.to).add(1, \"d\"),\r\n//       \"day\"\r\n//     );\r\n//   }, []);\r\n// };\r\n\r\n// const spentAmount = filterByDateRange(transactions, dateRange).reduce(\r\n//   (acc, current) => {\r\n//     return (\r\n//       Number(acc) +\r\n//       (current.type === \"deposit\"\r\n//         ? -Math.abs(Number(current.amount))\r\n//         : Number(current.amount))\r\n//     );\r\n//   },\r\n//   []\r\n// );\r\n\r\nexport const getItemAmountForRange = (frequency, amount, dateRange) => {\r\n  //add one day to difference to figure is inclusive of the day (otherwise 1 day = 0)\r\n  const numOfDays = dateRange.to.diff(dateRange.from, \"days\") + 1;\r\n\r\n  if (frequency === \"daily\") {\r\n    return amount * numOfDays;\r\n  }\r\n  if (frequency === \"weekly\") {\r\n    return ((amount * 52) / 365) * numOfDays;\r\n  }\r\n  if (frequency === \"monthly\") {\r\n    return ((amount * 12) / 365) * numOfDays;\r\n  }\r\n  if (frequency === \"annually\") {\r\n    return (amount / 365) * numOfDays;\r\n  }\r\n};\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\allocatedBudget.jsx",[],["285","286"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\AllocatedBudget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\ItemTotal.jsx",[],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":41,"column":3,"nodeType":"293","messageId":"294","endLine":41,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":19},{"ruleId":"287","replacedBy":"299"},{"ruleId":"289","replacedBy":"300"},{"ruleId":"287","replacedBy":"301"},{"ruleId":"289","replacedBy":"302"},{"ruleId":"295","severity":1,"message":"303","line":3,"column":18,"nodeType":"297","messageId":"298","endLine":3,"endColumn":23},{"ruleId":"295","severity":1,"message":"304","line":14,"column":8,"nodeType":"297","messageId":"298","endLine":14,"endColumn":27},{"ruleId":"305","severity":1,"message":"306","line":70,"column":25,"nodeType":"307","messageId":"308","endLine":70,"endColumn":36},{"ruleId":"309","severity":1,"message":"310","line":164,"column":13,"nodeType":"311","endLine":166,"endColumn":7},{"ruleId":"295","severity":1,"message":"312","line":39,"column":9,"nodeType":"297","messageId":"298","endLine":39,"endColumn":17},{"ruleId":"295","severity":1,"message":"313","line":5,"column":31,"nodeType":"297","messageId":"298","endLine":5,"endColumn":55},{"ruleId":"287","replacedBy":"314"},{"ruleId":"289","replacedBy":"315"},{"ruleId":"316","severity":1,"message":"317","line":48,"column":5,"nodeType":"318","endLine":48,"endColumn":7,"suggestions":"319"},{"ruleId":"295","severity":1,"message":"320","line":87,"column":9,"nodeType":"297","messageId":"298","endLine":87,"endColumn":23},{"ruleId":"295","severity":1,"message":"321","line":98,"column":9,"nodeType":"297","messageId":"298","endLine":98,"endColumn":26},{"ruleId":"295","severity":1,"message":"322","line":109,"column":9,"nodeType":"297","messageId":"298","endLine":109,"endColumn":27},{"ruleId":"295","severity":1,"message":"323","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":24},{"ruleId":"295","severity":1,"message":"324","line":6,"column":26,"nodeType":"297","messageId":"298","endLine":6,"endColumn":36},{"ruleId":"295","severity":1,"message":"325","line":15,"column":5,"nodeType":"297","messageId":"298","endLine":15,"endColumn":17},{"ruleId":"295","severity":1,"message":"326","line":16,"column":5,"nodeType":"297","messageId":"298","endLine":16,"endColumn":24},{"ruleId":"295","severity":1,"message":"327","line":19,"column":10,"nodeType":"297","messageId":"298","endLine":19,"endColumn":17},{"ruleId":"295","severity":1,"message":"328","line":19,"column":19,"nodeType":"297","messageId":"298","endLine":19,"endColumn":29},{"ruleId":"295","severity":1,"message":"329","line":25,"column":9,"nodeType":"297","messageId":"298","endLine":25,"endColumn":28},{"ruleId":"295","severity":1,"message":"330","line":9,"column":11,"nodeType":"297","messageId":"298","endLine":9,"endColumn":24},{"ruleId":"295","severity":1,"message":"331","line":26,"column":42,"nodeType":"297","messageId":"298","endLine":26,"endColumn":58},{"ruleId":"332","severity":1,"message":"333","line":89,"column":33,"nodeType":"334","messageId":"335","endLine":89,"endColumn":35},{"ruleId":"332","severity":1,"message":"333","line":99,"column":43,"nodeType":"334","messageId":"335","endLine":99,"endColumn":45},{"ruleId":"295","severity":1,"message":"336","line":8,"column":10,"nodeType":"297","messageId":"298","endLine":8,"endColumn":18},{"ruleId":"295","severity":1,"message":"337","line":14,"column":10,"nodeType":"297","messageId":"298","endLine":14,"endColumn":23},{"ruleId":"295","severity":1,"message":"338","line":14,"column":25,"nodeType":"297","messageId":"298","endLine":14,"endColumn":37},{"ruleId":"295","severity":1,"message":"339","line":14,"column":39,"nodeType":"297","messageId":"298","endLine":14,"endColumn":53},{"ruleId":"316","severity":1,"message":"340","line":37,"column":6,"nodeType":"318","endLine":37,"endColumn":8,"suggestions":"341"},{"ruleId":"316","severity":1,"message":"342","line":18,"column":5,"nodeType":"318","endLine":18,"endColumn":26,"suggestions":"343"},{"ruleId":"332","severity":1,"message":"344","line":322,"column":27,"nodeType":"334","messageId":"335","endLine":322,"endColumn":29},{"ruleId":"287","replacedBy":"345"},{"ruleId":"289","replacedBy":"346"},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-dupe-keys","Duplicate key 'currentBudget'.","ObjectExpression","unexpected","no-unused-vars","'DashSidebar' is defined but never used.","Identifier","unusedVar",["347"],["348"],["347"],["348"],"'frame' is defined but never used.","'UncategorizedBudget' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'seedData' is assigned a value but never used.","'sortByCategoryThenByItem' is defined but never used.",["347"],["348"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'incomeData'. Either include it or remove the dependency array. You can also do a functional update 'setIncomeData(i => ...)' if you only need 'incomeData' in the 'setIncomeData' call.","ArrayExpression",["349"],"'validateAnnual' is assigned a value but never used.","'validateAllowance' is assigned a value but never used.","'validateDeductions' is assigned a value but never used.","'RiEyeCloseLine' is defined but never used.","'RiEye2Line' is defined but never used.","'updateBudget' is assigned a value but never used.","'updateCurrentBudget' is assigned a value but never used.","'widgets' is assigned a value but never used.","'setWidgets' is assigned a value but never used.","'handleChangeSetting' is assigned a value but never used.","'currentBudget' is assigned a value but never used.","'includeMandatory' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'BiAbacus' is defined but never used.","'formatStrings' is defined but never used.","'divideValues' is defined but never used.","'multiplyValues' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'loadBudgets'. Either include them or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'updateAllocatedFunds'. Either include it or remove the dependency array.",["351"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.",["347"],["348"],"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [incomeData]",{"range":"358","text":"359"},"Update the dependencies array to be: [data, loadBudgets]",{"range":"360","text":"361"},"Update the dependencies array to be: [allocatedFundsTotal, updateAllocatedFunds]",{"range":"362","text":"363"},[1630,1632],"[incomeData]",[1063,1065],"[data, loadBudgets]",[704,725],"[allocatedFundsTotal, updateAllocatedFunds]"]