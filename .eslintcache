[{"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\index.js":"1","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\App.js":"2","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\styles\\GlobalStyle.js":"3","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\nav.js":"4","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Nav.js":"5","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Sidebar.js":"6","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\SubNav.js":"7","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budget.jsx":"8","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Dashboard.jsx":"9","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\data.js":"10","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\BudgetList.jsx":"11","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\Budget.jsx":"12","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Spinner.jsx":"13","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\GlobalContext.js":"14","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\AddBudgetForm.jsx":"15","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\Reducer.js":"16","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Income.jsx":"17","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Settings.jsx":"18","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Budget.jsx":"19","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Tracker.jsx":"20","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetList.jsx":"21","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetItem.jsx":"22","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\DashSidebar.js":"23","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ConfigureDash.jsx":"24","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\util.js":"25","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetItemForm.jsx":"26","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\Table.jsx":"27","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedSelector.jsx":"28","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AllocatedWidget.jsx":"29","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\SalaryWidget.jsx":"30","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedChart.jsx":"31","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByItemWidget.jsx":"32","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByCategoryWidget.jsx":"33","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddTransactionForm.jsx":"34","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TransactionList.jsx":"35","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Expenditure.jsx":"36","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureWidget.jsx":"37","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Transaction.jsx":"38"},{"size":265,"mtime":1610801873949,"results":"39","hashOfConfig":"40"},{"size":926,"mtime":1611573763611,"results":"41","hashOfConfig":"40"},{"size":1890,"mtime":1612287219925,"results":"42","hashOfConfig":"40"},{"size":590,"mtime":1610815490076,"results":"43","hashOfConfig":"40"},{"size":5328,"mtime":1612371383614,"results":"44","hashOfConfig":"40"},{"size":4061,"mtime":1612704889163,"results":"45","hashOfConfig":"40"},{"size":865,"mtime":1611057416597,"results":"46","hashOfConfig":"40"},{"size":1126,"mtime":1611747852251,"results":"47","hashOfConfig":"40"},{"size":5130,"mtime":1613055782583,"results":"48","hashOfConfig":"40"},{"size":11825,"mtime":1613055680540,"results":"49","hashOfConfig":"40"},{"size":1389,"mtime":1611949679614,"results":"50","hashOfConfig":"40"},{"size":2393,"mtime":1612371037134,"results":"51","hashOfConfig":"40"},{"size":544,"mtime":1610908380638,"results":"52","hashOfConfig":"40"},{"size":2480,"mtime":1612370853815,"results":"53","hashOfConfig":"40"},{"size":4605,"mtime":1612905544413,"results":"54","hashOfConfig":"40"},{"size":1794,"mtime":1612369458522,"results":"55","hashOfConfig":"40"},{"size":11415,"mtime":1612905698748,"results":"56","hashOfConfig":"40"},{"size":1512,"mtime":1612724625738,"results":"57","hashOfConfig":"40"},{"size":826,"mtime":1612705244684,"results":"58","hashOfConfig":"40"},{"size":739,"mtime":1612704765508,"results":"59","hashOfConfig":"40"},{"size":2431,"mtime":1612626466389,"results":"60","hashOfConfig":"40"},{"size":1972,"mtime":1612291796972,"results":"61","hashOfConfig":"40"},{"size":2965,"mtime":1612526711873,"results":"62","hashOfConfig":"40"},{"size":7838,"mtime":1613048799815,"results":"63","hashOfConfig":"40"},{"size":5390,"mtime":1612722154554,"results":"64","hashOfConfig":"40"},{"size":5775,"mtime":1612701120227,"results":"65","hashOfConfig":"40"},{"size":2170,"mtime":1612615464077,"results":"66","hashOfConfig":"40"},{"size":2721,"mtime":1612702312732,"results":"67","hashOfConfig":"40"},{"size":2812,"mtime":1613056904480,"results":"68","hashOfConfig":"40"},{"size":3923,"mtime":1613056816172,"results":"69","hashOfConfig":"40"},{"size":1200,"mtime":1612389885724,"results":"70","hashOfConfig":"40"},{"size":8323,"mtime":1613057659023,"results":"71","hashOfConfig":"40"},{"size":7091,"mtime":1613058504318,"results":"72","hashOfConfig":"40"},{"size":5320,"mtime":1612722018359,"results":"73","hashOfConfig":"40"},{"size":2387,"mtime":1612720864165,"results":"74","hashOfConfig":"40"},{"size":832,"mtime":1612716994527,"results":"75","hashOfConfig":"40"},{"size":2580,"mtime":1612717068567,"results":"76","hashOfConfig":"40"},{"size":1187,"mtime":1612718315919,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1tz9bm",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\index.js",[],["159","160"],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\App.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\styles\\GlobalStyle.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\nav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Nav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Sidebar.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\SubNav.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Budget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Dashboard.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\data.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\BudgetList.jsx",["161"],"import { useEffect, useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport Budget from \"./Budget\";\r\nimport { getData } from \"../../data\";\r\nimport Spinner from \"../Spinner\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n\r\nconst BudgetList = () => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  //const [showBudgets, setShowBudgets] = useState(false);\r\n  const { budgets, loadBudgets } = useContext(GlobalContext);\r\n  //console.log(currentBudgetId);\r\n\r\n  useEffect(() => {\r\n    getData().then(\r\n      (response) => {\r\n        loadBudgets(response);\r\n        setLoading(false);\r\n        //setShowBudgets(true);\r\n      },\r\n      (reject) => {\r\n        console.log(reject);\r\n        setLoading(false);\r\n        //setShowBudgets(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <StyledBudgetList>\r\n          {budgets.map((budget) => (\r\n            <Budget budget={budget} key={budget.id} />\r\n          ))}\r\n        </StyledBudgetList>\r\n      ) : (\r\n        <StyledSpin>\r\n          <Spinner />\r\n        </StyledSpin>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledBudgetList = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst StyledSpin = styled(motion.div)`\r\n  align-self: center;\r\n`;\r\n\r\nexport default BudgetList;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\Budget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\Spinner.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\GlobalContext.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\budget\\AddBudgetForm.jsx",["162","163"],"import { useState, useContext } from \"react\";\r\n//style\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { saveBudgetLocally } from \"../../util\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//UUID inique ID generator\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getWidgets } from \"../../data\";\r\n\r\nconst AddBudgetForm = () => {\r\n  const [formData, setFormData] = useState({ name: \"\", description: \"\" });\r\n  const { addBudget, budgets } = useContext(GlobalContext);\r\n\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"ADDED\":\r\n        toast.dark(\"Budget Added\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.warn(\r\n          \"Please enter a name and description longer than 5 characters\",\r\n          { color: \"black\" }\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  //   const CloseButton = ({ closeToast }) => (\r\n  //     <FaWindowClose className=\"toastClose\" onClick={closeToast} />\r\n  //   );\r\n\r\n  const handleValidation = (formData) => {\r\n    let valid = true;\r\n    //console.log(formData.name.length);\r\n    if (formData.name.length < 5 || formData.description.length < 5) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (handleValidation(formData)) {\r\n      const date = new Date(Date.now());\r\n      //const sd = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n      const newBudget = {\r\n        id: uuidv4(),\r\n        saveName: formData.name,\r\n        description: formData.description,\r\n        saveDate:\r\n          date.getDate() +\r\n          \"/\" +\r\n          (date.getMonth() + 1) +\r\n          \"/\" +\r\n          date.getFullYear(),\r\n        data: {\r\n          budgetItems: new Array(),\r\n          transactions: new Array(),\r\n          income: {\r\n            annual: 0,\r\n            allowance: 0,\r\n            taxable: 0,\r\n            tax: 0,\r\n            ni: 0,\r\n            contributions: 0,\r\n            yearlyNet: 0,\r\n            monthlyNet: 0,\r\n            weeklyNet: 0,\r\n          },\r\n        },\r\n        widgets: getWidgets(),\r\n      };\r\n\r\n      //add budget to app context\r\n      addBudget(newBudget);\r\n      //save budget to local storage\r\n      saveBudgetLocally(budgets, newBudget);\r\n      //reset form\r\n      setFormData({ name: \"\", description: \"\" });\r\n      notify(\"ADDED\");\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledAddbudgetForm>\r\n        <ToastContainer\r\n          closeButton={false}\r\n          transition={Zoom}\r\n          position=\"bottom-center\"\r\n          draggable={false}\r\n          pauseOnHover\r\n          autoClose={2000}\r\n          hideProgressBar\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n        />\r\n\r\n        <h4>New Budget</h4>\r\n        <form>\r\n          <label>Name:</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Name...\"\r\n          />\r\n          <label>Description:</label>\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            placeholder=\"Description...\"\r\n          />\r\n          <button onClick={onSubmit} id=\"addBudgetButton\">\r\n            Add Budget\r\n          </button>\r\n        </form>\r\n      </StyledAddbudgetForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledAddbudgetForm = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  //justify-content: space-between;\r\n  margin-bottom: 2rem;\r\n  padding: 1rem 1.5rem;\r\n  min-width: 100%;\r\n  min-height: 8vh;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  border-left: transparent 0.25rem solid;\r\n  color: #848586;\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 10pt;\r\n    width: 100%;\r\n  }\r\n  label {\r\n    margin-right: 0.25rem;\r\n  }\r\n  input {\r\n    padding: 0.25rem;\r\n    outline: none;\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport default AddBudgetForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\context\\Reducer.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Income.jsx",["164","165","166","167"],"import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { updateBudgetLocally } from \"../../util\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Income = () => {\r\n  //global context\r\n  const {\r\n    updateBudget,\r\n    budgets,\r\n    updateCurrentBudget,\r\n    currentBudget,\r\n    currencySymbol,\r\n  } = useContext(GlobalContext);\r\n\r\n  //form data hook\r\n  const [formIncome, setFormIncome] = useState({\r\n    ...currentBudget.data.income,\r\n  });\r\n\r\n  let totalDeductions = (\r\n    Number(formIncome.ni) + Number(formIncome.tax)\r\n  ).toFixed(2);\r\n  //let yearlyNet = (formIncome.annual - totalDeductions).toFixed(2);\r\n  let monthlyNet = (formIncome.yearlyNet / 12).toFixed(2);\r\n  let weeklyNet = (formIncome.yearlyNet / 52).toFixed(2);\r\n  let taxable = (formIncome.annual - formIncome.allowance).toFixed(2);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Update deductions\");\r\n  // }, [formIncome.ni, formIncome.tax]);\r\n\r\n  //TOAST MESSAGE\r\n  const notify = (type) => {\r\n    switch (type) {\r\n      case \"UPDATED\":\r\n        toast.dark(\"Income updated\");\r\n        break;\r\n      case \"INVALID\":\r\n        toast.dark(\"Please enter numbers only\");\r\n        break;\r\n      case \"INVALID ANNUAL\":\r\n        toast.dark(\r\n          \"Please ensure Annual (Net) figure is lower than Annual (gross)\"\r\n        );\r\n        break;\r\n      case \"INVALID ALLOWANCE\":\r\n        toast.dark(\r\n          \"Please ensure Allowance is less than Annual (gross) figure\"\r\n        );\r\n        break;\r\n      case \"INVALID DEDUCTIONS\":\r\n        toast.dark(\r\n          \"Please ensure Total Deductions are less than Annual (gross) figure\"\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\");\r\n    }\r\n  };\r\n\r\n  //VALIDATION\r\n  //FORMAT\r\n  const handleFormatValidation = (value) => {\r\n    const reg = /^[0-9]*(?:\\.?)[0-9]*$/;\r\n    return value.match(reg);\r\n  };\r\n\r\n  //NET less than gross annual income\r\n  const validateAnnual = () => {\r\n    let isValid = false;\r\n    if (Number(formIncome.annual) > Number(formIncome.yearlyNet)) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID ANNUAL\");\r\n      document.getElementById(\"yearlyNet\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const validateAllowance = () => {\r\n    let isValid = false;\r\n    if (Number(formIncome.allowance) < Number(formIncome.annual)) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID ALLOWANCE\");\r\n      document.getElementById(\"allowance\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const validateDeductions = () => {\r\n    let isValid = false;\r\n    if (Number(formIncome.contributions) < Number(formIncome.annual)) {\r\n      isValid = true;\r\n    } else {\r\n      notify(\"INVALID DEDUCTIONS\");\r\n      document.getElementById(\"contributions\").focus();\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setFormIncome(() => ({\r\n  //     ...formIncome,\r\n  //     contributions: Number(formIncome.ni) + Number(formIncome.tax),\r\n  //   }));\r\n  // }, [formIncome]);\r\n\r\n  //handle form data change\r\n  const handleChange = (e) => {\r\n    if (handleFormatValidation(e.target.value)) {\r\n      setFormIncome(() => ({\r\n        ...formIncome,\r\n        [e.target.name]: e.target.value,\r\n      }));\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n  const handleBlur = (e) => {\r\n    //console.log(e);\r\n    //check if component mounted\r\n    setFormIncome(() => ({\r\n      ...formIncome,\r\n      [e.target.name]: Number(e.target.value).toFixed(2),\r\n    }));\r\n  };\r\n\r\n  //handle form submit\r\n  const handleSaveBudget = () => {\r\n    if (\r\n      // validateAnnual() === true &&\r\n      // validateAllowance() === true &&\r\n      // validateDeductions() === true\r\n      true\r\n    ) {\r\n      //update global provider\r\n      updateBudget({\r\n        ...currentBudget,\r\n        data: {\r\n          ...currentBudget.data,\r\n          income: {\r\n            ...formIncome,\r\n            monthlyNet: monthlyNet,\r\n            weeklyNet: weeklyNet,\r\n            taxable: taxable,\r\n          },\r\n        },\r\n      });\r\n      // update local storage\r\n      updateBudgetLocally(budgets, {\r\n        ...currentBudget,\r\n        data: {\r\n          ...currentBudget.data,\r\n          income: {\r\n            ...formIncome,\r\n            monthlyNet: monthlyNet,\r\n            weeklyNet: weeklyNet,\r\n            taxable: taxable,\r\n          },\r\n        },\r\n      });\r\n      // update current budget\r\n      updateCurrentBudget({\r\n        ...currentBudget,\r\n        data: {\r\n          ...currentBudget.data,\r\n          income: {\r\n            ...formIncome,\r\n            monthlyNet: monthlyNet,\r\n            weeklyNet: weeklyNet,\r\n            taxable: taxable,\r\n            contributions: totalDeductions,\r\n          },\r\n        },\r\n      });\r\n      //toast message\r\n      notify(\"UPDATED\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledIncome>\r\n      <ToastContainer\r\n        closeButton={false}\r\n        transition={Zoom}\r\n        position=\"bottom-center\"\r\n        draggable={false}\r\n        pauseOnHover\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n      />\r\n      <h3>Income</h3>\r\n      <div className=\"container\">\r\n        <form>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"annual\">Annual Salary (Gross)</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"activeInput\"\r\n                type=\"text\"\r\n                name=\"annual\"\r\n                id=\"annual\"\r\n                value={formIncome.annual || \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"allowance\">Tax Free Allowance</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"activeInput\"\r\n                type=\"text\"\r\n                name=\"allowance\"\r\n                id=\"allowance\"\r\n                value={formIncome.allowance || \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"taxable\">Taxable Income</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                type=\"text\"\r\n                name=\"taxable\"\r\n                id=\"taxable\"\r\n                value={taxable}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"tax\">Income Tax</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"activeInput\"\r\n                type=\"text\"\r\n                name=\"tax\"\r\n                id=\"tax\"\r\n                value={formIncome.tax || \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"ni\">National Insurance</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"activeInput\"\r\n                type=\"text\"\r\n                name=\"ni\"\r\n                id=\"ni\"\r\n                value={formIncome.ni || \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"contributions\">Total deductions</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                type=\"text\"\r\n                name=\"contributions\"\r\n                id=\"contributions\"\r\n                value={totalDeductions}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"weeklyNet\">Weekly Salary (Net)</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                type=\"text\"\r\n                name=\"weeklyNet\"\r\n                id=\"weeklyNet\"\r\n                value={weeklyNet || \"\"}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"monthlyNet\">Monthly Salary (Net)</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                type=\"text\"\r\n                name=\"monthlyNet\"\r\n                id=\"monthlyNet\"\r\n                value={monthlyNet || \"\"}\r\n                onChange={handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"yearlyNet\">Annual Salary (Net)</label>\r\n            <div className=\"currencyInput\">\r\n              {currencySymbol}\r\n              <input\r\n                className=\"activeInput\"\r\n                type=\"text\"\r\n                name=\"yearlyNet\"\r\n                id=\"yearlyNet\"\r\n                value={formIncome.yearlyNet || \"\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                //readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <button onClick={() => handleSaveBudget()}>SAVE</button>\r\n      </div>\r\n    </StyledIncome>\r\n  );\r\n};\r\n\r\nconst StyledIncome = styled(motion.div)`\r\n  h3 {\r\n    color: white;\r\n    //font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .container {\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n    padding: 3rem;\r\n    border-radius: 4px;\r\n    background-color: #39393c;\r\n    color: #848586;\r\n  }\r\n  .line {\r\n    width: 100%;\r\n    margin: 0.5rem;\r\n    background-color: #848586;\r\n    height: 1px;\r\n  }\r\n  h3 {\r\n    margin-bottom: 1rem;\r\n    color: white;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    .row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 0.5rem 0rem;\r\n    }\r\n    label {\r\n      margin-right: 1rem;\r\n    }\r\n    .currencyInput {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    .activeInput {\r\n      &:hover,\r\n      &:active,\r\n      &:focus {\r\n        outline: #00b4ee solid 2px;\r\n        color: white;\r\n      }\r\n    }\r\n    input {\r\n      margin-left: 0.5rem;\r\n      padding: 0.25rem;\r\n      font-size: 1rem;\r\n      outline: solid #848586 2px;\r\n      background-color: #39393c;\r\n      border-radius: 4px;\r\n      border: transparent solid 2px;\r\n      color: #848586;\r\n    }\r\n  }\r\n  button {\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  p {\r\n    color: white;\r\n    padding-left: 1rem;\r\n    font-size: 10pt;\r\n  }\r\n`;\r\n\r\nexport default Income;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\containers\\Settings.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Budget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Tracker.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetList.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\BudgetItem.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\DashSidebar.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\ConfigureDash.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\util.js",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddBudgetItemForm.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\Table.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedSelector.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\AllocatedWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\SalaryWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\AllocatedChart.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByItemWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\BudgetByCategoryWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\AddTransactionForm.jsx",["168","169","170","171"],"import { useState, useContext } from \"react\";\r\n//style\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n//message components\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { updateBudgetLocally } from \"../../util\";\r\n//context\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\n//UUID inique ID generator\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst AddTransactionForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    category: \"\",\r\n    item: \"\",\r\n    date: \"\",\r\n    amount: 0.0,\r\n  });\r\n\r\n  const { updateBudget, currentBudget, updateCurrentBudget } = useContext(\r\n    GlobalContext\r\n  );\r\n\r\n  const notify = (type) => {\r\n    const toastStyle = {\r\n      position: \"bottom-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: false,\r\n      progress: \"0.. 1\",\r\n    };\r\n    switch (type) {\r\n      case \"ADDED\":\r\n        toast.dark(\"Transaction Added\", toastStyle);\r\n        break;\r\n      case \"INVALID\":\r\n        toast.warn(\r\n          \"Please enter a name and description longer than 5 characters\",\r\n          { color: \"black\", ...toastStyle }\r\n        );\r\n        break;\r\n      default:\r\n        toast.dark(\"Nothing to report\", toastStyle);\r\n    }\r\n  };\r\n\r\n  const handleValidation = (formData) => {\r\n    let valid = true;\r\n    //console.log(formData.name.length);\r\n    // if (formData.name.length < 5 || formData.description.length < 5) {\r\n    //   valid = false;\r\n    // }\r\n    return valid;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    //console.log(`${e.target.name}: ${e.target.value}`);\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(handleValidation(formData));\r\n\r\n    if (handleValidation(formData)) {\r\n      //const date = new Date(Date.now());\r\n      //const sd = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n      const newTransaction = {\r\n        id: uuidv4(),\r\n        category: formData.category,\r\n        item: formData.item,\r\n        date: formData.date,\r\n        amount: Number(formData.amount),\r\n      };\r\n\r\n      console.log(newTransaction);\r\n\r\n      // //add budget to app context\r\n      // const transactions = currentBudget.data.transactions;\r\n      // updateBudget({\r\n      //   ...currentBudget,\r\n      //   data: {\r\n      //     ...currentBudget.data,\r\n      //     transactions: [...transactions, newTransaction],\r\n      //   },\r\n      // });\r\n\r\n      // //save budget to local storage\r\n      // updateBudgetLocally(transactions, {\r\n      //   ...currentBudget,\r\n      //   data: {\r\n      //     ...currentBudget.data,\r\n      //     transactions: [...transactions, newTransaction],\r\n      //   },\r\n      // });\r\n\r\n      // //update current budget\r\n      // updateCurrentBudget({\r\n      //   ...currentBudget,\r\n      //   data: {\r\n      //     ...currentBudget.data,\r\n      //     transactions: [...transactions, newTransaction],\r\n      //   },\r\n      // });\r\n\r\n      //reset form\r\n      setFormData({\r\n        category: \"\",\r\n        item: \"\",\r\n        date: \"\",\r\n        amount: \"0.00\",\r\n      });\r\n      notify(\"ADDED\");\r\n    } else {\r\n      notify(\"INVALID\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledAddTransactionForm>\r\n      <ToastContainer\r\n        //closeButton={CloseButton}\r\n        closeButton={false}\r\n        transition={Zoom}\r\n        position=\"bottom-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={true}\r\n        closeOnClick\r\n        rtl={false}\r\n        //pauseOnFocusLoss\r\n        draggable={false}\r\n        pauseOnHover\r\n      />\r\n\r\n      <h4>New Transaction</h4>\r\n      <form>\r\n        <label>Category:</label>\r\n        <input\r\n          name=\"category\"\r\n          type=\"text\"\r\n          value={formData.category}\r\n          onChange={handleChange}\r\n          placeholder=\"Category...\"\r\n        />\r\n        <label>Item:</label>\r\n        <input\r\n          name=\"item\"\r\n          type=\"text\"\r\n          value={formData.item}\r\n          onChange={handleChange}\r\n          placeholder=\"item...\"\r\n        />\r\n        <label>Date:</label>\r\n        <input type=\"date\" />\r\n        <label>Amount:</label>\r\n        <input\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          value={formData.amount}\r\n          onChange={handleChange}\r\n          placeholder=\"Enter amount...\"\r\n        />\r\n        <button onClick={onSubmit}>Add</button>\r\n      </form>\r\n    </StyledAddTransactionForm>\r\n  );\r\n};\r\n\r\nconst StyledAddTransactionForm = styled(motion.div)`\r\n  padding: 1rem;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  background-color: #39393c;\r\n  color: #848586;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  //margin-top: 1rem;\r\n  h4 {\r\n    color: white;\r\n    font-weight: 500;\r\n    margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 10pt;\r\n    width: 100%;\r\n  }\r\n  label {\r\n    margin-right: 0.25rem;\r\n  }\r\n  input,\r\n  select {\r\n    padding: 0.25rem;\r\n    outline: none;\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport default AddTransactionForm;\r\n","E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\TransactionList.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Expenditure.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\dashboard\\widgets\\ExpenditureWidget.jsx",[],"E:\\1 - Web Dev\\BUDGET APP\\react-budget-app\\src\\components\\settings\\Transaction.jsx",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":28,"column":6,"nodeType":"178","endLine":28,"endColumn":8,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":72,"column":24,"nodeType":"182","messageId":"183","endLine":72,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":73,"column":25,"nodeType":"182","messageId":"183","endLine":73,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":1,"column":32,"nodeType":"186","messageId":"187","endLine":1,"endColumn":41},{"ruleId":"184","severity":1,"message":"188","line":75,"column":9,"nodeType":"186","messageId":"187","endLine":75,"endColumn":23},{"ruleId":"184","severity":1,"message":"189","line":86,"column":9,"nodeType":"186","messageId":"187","endLine":86,"endColumn":26},{"ruleId":"184","severity":1,"message":"190","line":97,"column":9,"nodeType":"186","messageId":"187","endLine":97,"endColumn":27},{"ruleId":"184","severity":1,"message":"191","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":29},{"ruleId":"184","severity":1,"message":"192","line":22,"column":11,"nodeType":"186","messageId":"187","endLine":22,"endColumn":23},{"ruleId":"184","severity":1,"message":"193","line":22,"column":25,"nodeType":"186","messageId":"187","endLine":22,"endColumn":38},{"ruleId":"184","severity":1,"message":"194","line":22,"column":40,"nodeType":"186","messageId":"187","endLine":22,"endColumn":59},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadBudgets'. Either include it or remove the dependency array.","ArrayExpression",["197"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'validateAnnual' is assigned a value but never used.","'validateAllowance' is assigned a value but never used.","'validateDeductions' is assigned a value but never used.","'updateBudgetLocally' is defined but never used.","'updateBudget' is assigned a value but never used.","'currentBudget' is assigned a value but never used.","'updateCurrentBudget' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},"Update the dependencies array to be: [loadBudgets]",{"range":"200","text":"201"},[852,854],"[loadBudgets]"]